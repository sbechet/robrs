// Lightforce - Rob Hubbard - 1986 Faster Than Light (FTL)

use super::rhsongs::{Instrument, MusicPlayer, RhSongs, SidT, SoundFx};
#[allow(dead_code)]
pub static RHSONGS: RhSongs = RhSongs {
    musicplayer: MusicPlayer::Delta,
    total: TOTAL_SONGS,
    tracks: &TRACKS,
    patterns: &PATTERNS,
    instruments: &INSTRUMENTS,
    instrfx: &INSTRFX,
    resetspd: 2,
};

#[allow(dead_code)]
pub static TOTAL_SONGS: usize = 1;

#[allow(dead_code)]
pub static TRACK_0: [u8; 88] = [
    4, 4, 5, 5, 6, 6, 4, 4, 7, 7, 8, 8, 9, 9, 7, 7, 14, 15, 14, 15, 5, 5, 6, 6, 14, 15, 14, 15, 7,
    7, 8, 8, 9, 9, 7, 7, 4, 4, 5, 5, 6, 6, 4, 4, 12, 16, 16, 21, 17, 20, 17, 20, 22, 23, 24, 23,
    25, 9, 9, 7, 7, 9, 9, 8, 8, 16, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 26, 26, 28, 0, 0, 0, 0, 4, 4, 4,
    4, 255,
];

#[allow(dead_code)]
pub static TRACK_1: [u8; 110] = [
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    2, 2, 2, 2, 2, 2, 2, 2, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
    13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
    13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 1, 1, 1, 1, 0, 0, 27, 27, 29, 0, 0, 0, 0, 0, 0, 3, 3,
    255,
];

#[allow(dead_code)]
pub static TRACK_2: [u8; 187] = [
    11, 11, 11, 11, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 18, 18, 1, 1,
    18, 18, 19, 19, 18, 18, 1, 1, 18, 18, 19, 19, 18, 18, 1, 1, 18, 18, 19, 19, 18, 18, 1, 1, 18,
    18, 19, 19, 18, 18, 1, 1, 18, 18, 19, 19, 18, 18, 1, 1, 18, 18, 19, 19, 18, 18, 1, 1, 18, 18,
    19, 19, 18, 18, 1, 1, 18, 18, 19, 19, 18, 18, 1, 1, 18, 18, 19, 19, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 30, 30, 30, 30, 30, 30, 30, 30,
    30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 0, 0, 255,
];

#[allow(dead_code)]
pub static TRACKS: [&[&[u8]; 3]; 1] = [&[&TRACK_0, &TRACK_1, &TRACK_2]];

#[allow(dead_code)]
pub static PATTERNS: [&[u8]; 31] = [
    &PATTERN_0,
    &PATTERN_1,
    &PATTERN_2,
    &PATTERN_3,
    &PATTERN_4,
    &PATTERN_5,
    &PATTERN_6,
    &PATTERN_7,
    &PATTERN_8,
    &PATTERN_9,
    &PATTERN_10,
    &PATTERN_11,
    &PATTERN_12,
    &PATTERN_13,
    &PATTERN_14,
    &PATTERN_15,
    &PATTERN_16,
    &PATTERN_17,
    &PATTERN_18,
    &PATTERN_19,
    &PATTERN_20,
    &PATTERN_21,
    &PATTERN_22,
    &PATTERN_23,
    &PATTERN_24,
    &PATTERN_25,
    &PATTERN_26,
    &PATTERN_27,
    &PATTERN_28,
    &PATTERN_29,
    &PATTERN_30,
];
#[allow(dead_code)]
pub static PATTERN_0: [u8; 2] = [0x5F, 0xFF];
#[allow(dead_code)]
pub static PATTERN_1: [u8; 46] = [
    0x81, 0x3, 0x1A, 0x81, 0x0, 0x1A, 0x1, 0x1A, 0x81, 0x3, 0x1A, 0x81, 0x3, 0x1A, 0x81, 0x0, 0x1A,
    0x81, 0x3, 0x1A, 0x81, 0x0, 0x1A, 0x1, 0x1A, 0x81, 0x3, 0x1A, 0x81, 0x0, 0x1A, 0x81, 0x3, 0x1A,
    0x1, 0x1A, 0x81, 0x0, 0x1A, 0x81, 0x3, 0x1A, 0x81, 0x0, 0x1A, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_2: [u8; 20] = [
    0x85, 0x1, 0x28, 0x1, 0x30, 0x3, 0x30, 0x85, 0x2, 0x30, 0x83, 0x1, 0x30, 0x1, 0x30, 0x3, 0x30,
    0x3, 0x28, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_3: [u8; 26] = [
    0x81, 0x4, 0x26, 0x1, 0x26, 0x1, 0x30, 0x1, 0x32, 0x3, 0x32, 0x5, 0x30, 0x1, 0x32, 0x1, 0x32,
    0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x3, 0x32, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_4: [u8; 34] = [
    0x81, 0x5, 0x39, 0x1, 0x3E, 0x1, 0x45, 0x1, 0x37, 0x1, 0x3E, 0x1, 0x43, 0x1, 0x35, 0x1, 0x3E,
    0x1, 0x41, 0x1, 0x34, 0x1, 0x3E, 0x1, 0x40, 0x1, 0x35, 0x1, 0x3E, 0x1, 0x43, 0x1, 0x45, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_5: [u8; 33] = [
    0x1, 0x37, 0x1, 0x3C, 0x1, 0x43, 0x1, 0x35, 0x1, 0x3C, 0x1, 0x41, 0x1, 0x34, 0x1, 0x3C, 0x1,
    0x40, 0x1, 0x32, 0x1, 0x3C, 0x1, 0x3E, 0x1, 0x34, 0x1, 0x3C, 0x1, 0x41, 0x1, 0x43, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_6: [u8; 33] = [
    0x1, 0x35, 0x1, 0x3A, 0x1, 0x41, 0x1, 0x34, 0x1, 0x3A, 0x1, 0x40, 0x1, 0x32, 0x1, 0x3A, 0x1,
    0x3E, 0x1, 0x30, 0x1, 0x3A, 0x1, 0x3C, 0x1, 0x32, 0x1, 0x3A, 0x1, 0x40, 0x1, 0x41, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_7: [u8; 33] = [
    0x1, 0x39, 0x1, 0x45, 0x1, 0x4A, 0x1, 0x37, 0x1, 0x43, 0x1, 0x4A, 0x1, 0x35, 0x1, 0x41, 0x1,
    0x4A, 0x1, 0x34, 0x1, 0x40, 0x1, 0x4A, 0x1, 0x35, 0x1, 0x4A, 0x1, 0x43, 0x1, 0x45, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_8: [u8; 33] = [
    0x1, 0x37, 0x1, 0x43, 0x1, 0x48, 0x1, 0x35, 0x1, 0x41, 0x1, 0x48, 0x1, 0x34, 0x1, 0x40, 0x1,
    0x48, 0x1, 0x32, 0x1, 0x3E, 0x1, 0x48, 0x1, 0x34, 0x1, 0x48, 0x1, 0x41, 0x1, 0x43, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_9: [u8; 33] = [
    0x1, 0x35, 0x1, 0x41, 0x1, 0x46, 0x1, 0x34, 0x1, 0x40, 0x1, 0x46, 0x1, 0x32, 0x1, 0x3E, 0x1,
    0x46, 0x1, 0x30, 0x1, 0x3C, 0x1, 0x46, 0x1, 0x32, 0x1, 0x46, 0x1, 0x40, 0x1, 0x41, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_10: [u8; 10] = [0x8F, 0x6, 0x1A, 0xF, 0x1A, 0xF, 0x1A, 0xF, 0x1A, 0xFF];
#[allow(dead_code)]
pub static PATTERN_11: [u8; 10] = [0x8F, 0x15, 0x26, 0xF, 0x26, 0xF, 0x26, 0xF, 0x26, 0xFF];
#[allow(dead_code)]
pub static PATTERN_12: [u8; 62] = [
    0x9F, 0x9, 0x39, 0x97, 0xE, 0x3E, 0x87, 0xB, 0x41, 0x83, 0xE, 0x40, 0x7, 0x3E, 0xB3, 0x9, 0x39,
    0x17, 0xB9, 0x7, 0x39, 0x9F, 0xD, 0x3C, 0x9F, 0xE, 0x40, 0x9F, 0xA, 0x3E, 0x5F, 0x9F, 0xD,
    0x3C, 0x97, 0xE, 0x40, 0x87, 0xC, 0x43, 0x83, 0xB, 0x41, 0x87, 0xE, 0x40, 0x33, 0x3E, 0x17,
    0xBE, 0x7, 0x3E, 0x1F, 0x40, 0x9F, 0xC, 0x43, 0x9F, 0xB, 0x41, 0x5F, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_13: [u8; 38] = [
    0x85, 0xF, 0x28, 0x1, 0x30, 0x3, 0x30, 0x85, 0x10, 0x30, 0x83, 0xF, 0x30, 0x1, 0x30, 0x3, 0x30,
    0x3, 0x28, 0x5, 0x28, 0x1, 0x30, 0x3, 0x30, 0x85, 0x10, 0x30, 0x83, 0xF, 0x30, 0x1, 0x30, 0x3,
    0x30, 0x3, 0x28, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_14: [u8; 4] = [0x81, 0x8, 0x39, 0xFF];
#[allow(dead_code)]
pub static PATTERN_15: [u8; 31] = [
    0x1, 0x3E, 0x1, 0x45, 0x1, 0x37, 0x1, 0x3E, 0x1, 0x43, 0x1, 0x35, 0x1, 0x3E, 0x1, 0x41, 0x1,
    0x34, 0x1, 0x3E, 0x1, 0x40, 0x1, 0x35, 0x1, 0x3E, 0x1, 0x43, 0x1, 0x45, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_16: [u8; 39] = [
    0x85, 0xD, 0x46, 0x5, 0x46, 0x8F, 0x9, 0x45, 0x83, 0xB, 0x41, 0x85, 0xD, 0x43, 0x5, 0x43, 0x93,
    0x9, 0x45, 0x85, 0xD, 0x43, 0x5, 0x43, 0x8F, 0xB, 0x41, 0x83, 0xA, 0x3E, 0x85, 0xE, 0x40, 0x5,
    0x40, 0x93, 0xA, 0x3E, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_17: [u8; 50] = [
    0x8B, 0x7, 0x22, 0x8B, 0x7, 0x32, 0x7, 0x34, 0xB, 0x35, 0xF, 0x37, 0x3, 0x22, 0xB, 0x26, 0xB,
    0x32, 0x7, 0x34, 0xB, 0x35, 0xF, 0x34, 0x3, 0x21, 0xB, 0x22, 0x8B, 0x7, 0x32, 0x7, 0x34, 0xB,
    0x35, 0xF, 0x37, 0x3, 0x22, 0xB, 0x24, 0xB, 0x39, 0x7, 0x39, 0xB, 0x3A, 0x13, 0x3C, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_18: [u8; 46] = [
    0x81, 0x3, 0x16, 0x81, 0x0, 0x16, 0x1, 0x16, 0x81, 0x3, 0x16, 0x81, 0x3, 0x16, 0x81, 0x0, 0x16,
    0x81, 0x3, 0x16, 0x81, 0x0, 0x16, 0x1, 0x16, 0x81, 0x3, 0x16, 0x81, 0x0, 0x16, 0x81, 0x3, 0x16,
    0x1, 0x16, 0x81, 0x0, 0x16, 0x81, 0x3, 0x16, 0x81, 0x0, 0x16, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_19: [u8; 46] = [
    0x81, 0x3, 0x18, 0x81, 0x0, 0x18, 0x1, 0x18, 0x81, 0x3, 0x18, 0x81, 0x3, 0x18, 0x81, 0x0, 0x18,
    0x81, 0x3, 0x18, 0x81, 0x0, 0x18, 0x1, 0x18, 0x81, 0x3, 0x18, 0x81, 0x0, 0x18, 0x81, 0x3, 0x18,
    0x1, 0x18, 0x81, 0x0, 0x18, 0x81, 0x3, 0x18, 0x81, 0x0, 0x18, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_20: [u8; 45] = [
    0xB, 0x22, 0xB, 0x35, 0x7, 0x34, 0xB, 0x32, 0xB, 0x30, 0x7, 0x32, 0x17, 0x32, 0x7, 0x35, 0xB,
    0x37, 0xB, 0x35, 0x7, 0x21, 0xB, 0x22, 0xB, 0x35, 0x7, 0x34, 0xB, 0x32, 0xB, 0x34, 0x7, 0x35,
    0x17, 0x37, 0x7, 0x39, 0xB, 0x3A, 0xB, 0x39, 0x7, 0x24, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_21: [u8; 34] = [
    0x9F, 0x7, 0x22, 0x97, 0xE, 0x3E, 0x87, 0x7, 0x22, 0x1F, 0x26, 0x97, 0xA, 0x3E, 0x87, 0x7,
    0x21, 0x1F, 0x22, 0x97, 0xE, 0x3E, 0x87, 0x7, 0x22, 0x1F, 0x24, 0x97, 0xC, 0x43, 0x87, 0x7,
    0x24, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_22: [u8; 167] = [
    0x3, 0x32, 0x7, 0x34, 0x3, 0xB5, 0x7, 0x3A, 0x3, 0x35, 0x3, 0xBE, 0x3, 0x40, 0x7, 0xC1, 0x3,
    0xC0, 0x7, 0x3E, 0x7, 0xBA, 0x17, 0x39, 0x7, 0x3E, 0xB, 0x46, 0xB, 0x45, 0x3, 0x41, 0x3, 0xC0,
    0x3, 0x3E, 0x7, 0xC0, 0x3, 0xC1, 0x7, 0xBE, 0x3, 0x39, 0x3, 0xBA, 0x3, 0xC0, 0x7, 0xC1, 0x3,
    0xC3, 0x7, 0xC0, 0x3, 0x41, 0x3, 0xC3, 0xB, 0x45, 0xB, 0x46, 0x7, 0x45, 0x3, 0xC3, 0x7, 0xC1,
    0xB, 0xBC, 0x7, 0xBA, 0x13, 0x35, 0x3, 0x40, 0x3, 0xC1, 0x3, 0xBE, 0x3, 0xBA, 0x3, 0xB9, 0x3,
    0xBA, 0xB, 0x43, 0x7, 0x41, 0x3, 0x40, 0x1, 0xC1, 0x1, 0xC0, 0x3, 0xBC, 0x7, 0x3E, 0x3, 0xC0,
    0x3, 0xBE, 0x3, 0xBA, 0x3, 0x3C, 0x1, 0xBE, 0x1, 0xBC, 0x3, 0xB9, 0x7, 0x3A, 0x3, 0xBC, 0x3,
    0xBA, 0x3, 0xB7, 0x3, 0x39, 0x13, 0xBA, 0x3, 0x40, 0x3, 0xC1, 0xB, 0x46, 0xB, 0x45, 0x3, 0x41,
    0x3, 0xBE, 0x3, 0x40, 0x7, 0xC1, 0x3, 0xC6, 0x7, 0xC5, 0x3, 0x43, 0x3, 0xBC, 0x3, 0x3A, 0x3,
    0xB9, 0x3, 0xBA, 0x3, 0xC3, 0x3, 0xC0, 0x3, 0xBC, 0x3, 0xB7, 0x3, 0xB5, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_23: [u8; 41] = [
    0x1, 0x2E, 0x1, 0xAD, 0x1, 0xAE, 0x1, 0xB5, 0x1, 0x32, 0x1, 0xB0, 0x1, 0xB2, 0x1, 0xBA, 0x1,
    0x35, 0x1, 0xB4, 0x1, 0xB5, 0x1, 0xBE, 0x1, 0xBA, 0x1, 0xB9, 0x1, 0xBA, 0x1, 0xC1, 0xB, 0x46,
    0xB, 0x45, 0x3, 0x41, 0x3, 0x40, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_24: [u8; 41] = [
    0x1, 0x32, 0x1, 0xB0, 0x1, 0xB2, 0x1, 0xB9, 0x1, 0x35, 0x1, 0xB4, 0x1, 0xB5, 0x1, 0xBE, 0x1,
    0x39, 0x1, 0xB7, 0x1, 0xB9, 0x1, 0xCC, 0x1, 0xBE, 0x1, 0xBC, 0x1, 0xBE, 0x1, 0xCA, 0xB, 0x46,
    0xB, 0x45, 0x3, 0x41, 0x3, 0x40, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_25: [u8; 28] = [
    0x1F, 0x3C, 0x3, 0x30, 0x1, 0x2E, 0x1, 0x30, 0x3, 0x37, 0x5, 0x3C, 0x1, 0x30, 0x1, 0xB5, 0x1,
    0xB7, 0x1, 0xB5, 0x1, 0xB7, 0x1, 0xBC, 0x81, 0x11, 0xC3, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_26: [u8; 19] = [
    0xBF, 0x12, 0x32, 0x4B, 0x1F, 0x39, 0x1F, 0x34, 0x13, 0x39, 0x3F, 0x3E, 0x1F, 0x3E, 0x1F, 0x41,
    0x1F, 0x3C, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_27: [u8; 19] = [
    0x9F, 0x13, 0x39, 0x1F, 0x3A, 0x1F, 0x35, 0x1F, 0x37, 0x1F, 0x39, 0x3F, 0x3A, 0x4B, 0x1F, 0x40,
    0x13, 0x3E, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_28: [u8; 31] = [
    0x3F, 0x3E, 0x5F, 0x3F, 0x39, 0x5F, 0x3F, 0x35, 0x5F, 0x3F, 0x32, 0x5F, 0x3F, 0x30, 0x5F, 0x3F,
    0x30, 0x5F, 0x3F, 0x2D, 0x5F, 0x3F, 0x2D, 0x5F, 0x3F, 0x26, 0x5F, 0x3F, 0x26, 0x5F, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_29: [u8; 31] = [
    0x3F, 0x39, 0x5F, 0x3F, 0x32, 0x5F, 0x3F, 0x34, 0x5F, 0x3F, 0x34, 0x5F, 0x3F, 0x32, 0x5F, 0x3F,
    0x2E, 0x5F, 0x3F, 0x2E, 0x5F, 0x3F, 0x26, 0x5F, 0x3F, 0x2D, 0x5F, 0x3F, 0x26, 0x5F, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_30: [u8; 26] = [
    0x81, 0x14, 0x26, 0x1, 0x26, 0x1, 0x30, 0x1, 0x32, 0x3, 0x32, 0x5, 0x30, 0x1, 0x32, 0x1, 0x32,
    0x1, 0x30, 0x1, 0x30, 0x1, 0x30, 0x3, 0x32, 0xFF,
];

#[allow(dead_code)]
pub static INSTRUMENTS: [Instrument; 22] = [
    Instrument {
        pulse_width: 3712,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x2F,
        sustain_and_release: 0xF8,
        vibrato_depth: 0,
        pulse_speed: 8,
        fx: 0b01000100,
    },
    Instrument {
        pulse_width: 128,
        ctrl_register: 0b00010001,
        attack_and_decay: 0x08,
        sustain_and_release: 0x08,
        vibrato_depth: 0,
        pulse_speed: 0,
        fx: 0b00101011,
    },
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x07,
        sustain_and_release: 0x09,
        vibrato_depth: 0,
        pulse_speed: 0,
        fx: 0b00100011,
    },
    Instrument {
        pulse_width: 128,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x1F,
        sustain_and_release: 0xF9,
        vibrato_depth: 0,
        pulse_speed: 24,
        fx: 0b01000100,
    },
    Instrument {
        pulse_width: 32,
        ctrl_register: 0b00010001,
        attack_and_decay: 0x19,
        sustain_and_release: 0x09,
        vibrato_depth: 0,
        pulse_speed: 0,
        fx: 0b01100100,
    },
    Instrument {
        pulse_width: 64,
        ctrl_register: 0b00010001,
        attack_and_decay: 0x29,
        sustain_and_release: 0x79,
        vibrato_depth: 0,
        pulse_speed: 128,
        fx: 0b00000100,
    },
    Instrument {
        pulse_width: 160,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x0B,
        sustain_and_release: 0x79,
        vibrato_depth: 42,
        pulse_speed: 32,
        fx: 0b01000000,
    },
    Instrument {
        pulse_width: 448,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x3C,
        sustain_and_release: 0xBC,
        vibrato_depth: 51,
        pulse_speed: 16,
        fx: 0b00100000,
    },
    Instrument {
        pulse_width: 32,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x29,
        sustain_and_release: 0x59,
        vibrato_depth: 0,
        pulse_speed: 128,
        fx: 0b00000100,
    },
    Instrument {
        pulse_width: 352,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x3C,
        sustain_and_release: 0x8D,
        vibrato_depth: 0,
        pulse_speed: 40,
        fx: 0b00010000,
    },
    Instrument {
        pulse_width: 352,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x3C,
        sustain_and_release: 0x8D,
        vibrato_depth: 0,
        pulse_speed: 40,
        fx: 0b00010000,
    },
    Instrument {
        pulse_width: 352,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x3C,
        sustain_and_release: 0x8D,
        vibrato_depth: 0,
        pulse_speed: 40,
        fx: 0b00010000,
    },
    Instrument {
        pulse_width: 352,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x3C,
        sustain_and_release: 0x8D,
        vibrato_depth: 0,
        pulse_speed: 40,
        fx: 0b00010000,
    },
    Instrument {
        pulse_width: 352,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x3C,
        sustain_and_release: 0x8D,
        vibrato_depth: 0,
        pulse_speed: 40,
        fx: 0b00010000,
    },
    Instrument {
        pulse_width: 352,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x3C,
        sustain_and_release: 0x8D,
        vibrato_depth: 0,
        pulse_speed: 40,
        fx: 0b00010000,
    },
    Instrument {
        pulse_width: 128,
        ctrl_register: 0b00010001,
        attack_and_decay: 0x08,
        sustain_and_release: 0x08,
        vibrato_depth: 0,
        pulse_speed: 0,
        fx: 0b00101011,
    },
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x07,
        sustain_and_release: 0x09,
        vibrato_depth: 0,
        pulse_speed: 0,
        fx: 0b00100011,
    },
    Instrument {
        pulse_width: 2240,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x30,
        sustain_and_release: 0xF7,
        vibrato_depth: 0,
        pulse_speed: 32,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 768,
        ctrl_register: 0b01000001,
        attack_and_decay: 0xC6,
        sustain_and_release: 0x6D,
        vibrato_depth: 35,
        pulse_speed: 99,
        fx: 0b00100000,
    },
    Instrument {
        pulse_width: 768,
        ctrl_register: 0b01000001,
        attack_and_decay: 0xC6,
        sustain_and_release: 0x6D,
        vibrato_depth: 0,
        pulse_speed: 99,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 32,
        ctrl_register: 0b00010001,
        attack_and_decay: 0x19,
        sustain_and_release: 0x09,
        vibrato_depth: 0,
        pulse_speed: 0,
        fx: 0b01000100,
    },
    Instrument {
        pulse_width: 0,
        ctrl_register: 0b00000000,
        attack_and_decay: 0x00,
        sustain_and_release: 0x00,
        vibrato_depth: 0,
        pulse_speed: 0,
        fx: 0b00000000,
    },
];

#[allow(dead_code)]
pub static INSTRFX: [InstrFx; 22] = [
    InstrFx {
        vibdepth_note: 74,
        arpt: 0b00010001,
        skydive: 0b10000001,
        arpt_counter: 2,
        notenum: 0,
        pw_minmax: 0xfc,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 0,
        arpt: 0b00100001,
        skydive: 0b10000001,
        arpt_counter: 6,
        notenum: 54,
        pw_minmax: 0xfd,
        resfilt: 0b11110100,
        fchi: 0b00000010,
    },
    InstrFx {
        vibdepth_note: 0,
        arpt: 0b00100001,
        skydive: 0b10000001,
        arpt_counter: 6,
        notenum: 56,
        pw_minmax: 0xfd,
        resfilt: 0b11110000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 38,
        arpt: 0b01000001,
        skydive: 0b10000001,
        arpt_counter: 4,
        notenum: 0,
        pw_minmax: 0xfd,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 74,
        arpt: 0b00010001,
        skydive: 0b00000000,
        arpt_counter: 2,
        notenum: 0,
        pw_minmax: 0x20,
        resfilt: 0b11110100,
        fchi: 0b00000110,
    },
    InstrFx {
        vibdepth_note: 0,
        arpt: 0b01000011,
        skydive: 0b00000000,
        arpt_counter: 2,
        notenum: 0,
        pw_minmax: 0xf8,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 38,
        arpt: 0b01000001,
        skydive: 0b00010001,
        arpt_counter: 4,
        notenum: 0,
        pw_minmax: 0xfc,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 74,
        arpt: 0b00010001,
        skydive: 0b00000000,
        arpt_counter: 2,
        notenum: 0,
        pw_minmax: 0xfc,
        resfilt: 0b11110001,
        fchi: 0b00000011,
    },
    InstrFx {
        vibdepth_note: 0,
        arpt: 0b01000011,
        skydive: 0b00000000,
        arpt_counter: 2,
        notenum: 0,
        pw_minmax: 0xf8,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 0,
        arpt: 0b00100001,
        skydive: 0b00000000,
        arpt_counter: 4,
        notenum: 0,
        pw_minmax: 0xfc,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 1,
        arpt: 0b00100001,
        skydive: 0b00000000,
        arpt_counter: 4,
        notenum: 0,
        pw_minmax: 0xfc,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 2,
        arpt: 0b00100001,
        skydive: 0b00000000,
        arpt_counter: 4,
        notenum: 0,
        pw_minmax: 0xfc,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 3,
        arpt: 0b00100001,
        skydive: 0b00000000,
        arpt_counter: 4,
        notenum: 0,
        pw_minmax: 0xfc,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 4,
        arpt: 0b00100001,
        skydive: 0b00000000,
        arpt_counter: 4,
        notenum: 0,
        pw_minmax: 0xfc,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 5,
        arpt: 0b00100001,
        skydive: 0b00000000,
        arpt_counter: 4,
        notenum: 0,
        pw_minmax: 0xfc,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 0,
        arpt: 0b00100001,
        skydive: 0b10000001,
        arpt_counter: 6,
        notenum: 54,
        pw_minmax: 0xfd,
        resfilt: 0b11110001,
        fchi: 0b00000101,
    },
    InstrFx {
        vibdepth_note: 0,
        arpt: 0b00100001,
        skydive: 0b10000001,
        arpt_counter: 6,
        notenum: 56,
        pw_minmax: 0xfd,
        resfilt: 0b11110001,
        fchi: 0b00001111,
    },
    InstrFx {
        vibdepth_note: 0,
        arpt: 0b01000011,
        skydive: 0b00000000,
        arpt_counter: 4,
        notenum: 0,
        pw_minmax: 0xfa,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 0,
        arpt: 0b10000001,
        skydive: 0b10000001,
        arpt_counter: 1,
        notenum: 91,
        pw_minmax: 0x00,
        resfilt: 0b11110011,
        fchi: 0b11111010,
    },
    InstrFx {
        vibdepth_note: 0,
        arpt: 0b10000001,
        skydive: 0b10000001,
        arpt_counter: 1,
        notenum: 64,
        pw_minmax: 0x00,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 74,
        arpt: 0b00010001,
        skydive: 0b00000000,
        arpt_counter: 2,
        notenum: 0,
        pw_minmax: 0x20,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
    InstrFx {
        vibdepth_note: 0,
        arpt: 0b01000011,
        skydive: 0b00000000,
        arpt_counter: 3,
        notenum: 0,
        pw_minmax: 0xf8,
        resfilt: 0b00000000,
        fchi: 0b00000000,
    },
];

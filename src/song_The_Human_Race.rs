// The Human Race - Rob Hubbard - 1985 Mastertronic

use super::rhsongs::{InstrFx, Instrument, RhSongs, SidT, SoundFx};
#[allow(dead_code)]
pub static RHSONGS: RhSongs = RhSongs {
    version: 20,
    total: 5,
    tracks: &TRACKS,
    patterns: &PATTERNS,
    instruments: &INSTRUMENTS,
    soundfx: &SOUNDFX,
    instrfx: &INSTRFX,
    resetspd: 3,
    skydive_v1_when: 0,
    skydive_v1_add: -256,
};

#[allow(dead_code)]
pub static TRACK_0: [u8; 38] = [
    1, 4, 7, 10, 1, 4, 7, 10, 13, 14, 13, 14, 13, 14, 13, 14, 15, 16, 13, 13, 13, 15, 13, 13, 13,
    15, 13, 13, 13, 15, 13, 13, 13, 15, 13, 13, 13, 255,
];

#[allow(dead_code)]
pub static TRACK_1: [u8; 96] = [
    2, 3, 3, 5, 6, 6, 8, 9, 9, 11, 12, 12, 2, 3, 3, 5, 6, 6, 8, 9, 9, 11, 12, 12, 19, 19, 19, 19,
    19, 19, 19, 19, 17, 3, 3, 3, 5, 6, 6, 8, 9, 9, 11, 12, 12, 18, 18, 19, 20, 20, 21, 19, 22, 22,
    23, 19, 24, 24, 25, 19, 26, 26, 27, 19, 20, 20, 21, 19, 22, 22, 23, 19, 24, 24, 25, 19, 26, 26,
    27, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 255,
];

#[allow(dead_code)]
pub static TRACK_2: [u8; 23] = [
    31, 32, 33, 31, 35, 0, 36, 0, 35, 0, 36, 0, 37, 0, 37, 38, 39, 39, 35, 0, 36, 0, 255,
];

#[allow(dead_code)]
pub static TRACK_3: [u8; 37] = [
    28, 28, 29, 29, 30, 30, 28, 28, 34, 34, 28, 28, 34, 34, 28, 28, 30, 30, 28, 28, 30, 30, 28, 28,
    29, 29, 30, 30, 29, 29, 30, 30, 34, 34, 28, 28, 255,
];

#[allow(dead_code)]
pub static TRACK_4: [u8; 14] = [0, 0, 0, 0, 42, 43, 43, 44, 42, 50, 51, 50, 52, 255];

#[allow(dead_code)]
pub static TRACK_5: [u8; 41] = [
    40, 40, 40, 40, 40, 41, 40, 41, 40, 41, 41, 40, 45, 45, 45, 45, 45, 45, 45, 45, 46, 46, 41, 41,
    40, 41, 40, 41, 40, 41, 41, 40, 47, 48, 47, 49, 47, 48, 47, 41, 255,
];

#[allow(dead_code)]
pub static TRACK_6: [u8; 21] = [
    0, 0, 0, 0, 61, 58, 59, 61, 60, 58, 59, 62, 62, 63, 64, 62, 62, 63, 64, 58, 255,
];

#[allow(dead_code)]
pub static TRACK_7: [u8; 85] = [
    53, 53, 53, 53, 53, 53, 57, 57, 55, 54, 56, 57, 53, 53, 54, 54, 55, 55, 56, 57, 53, 53, 57, 57,
    55, 54, 56, 57, 53, 53, 57, 57, 55, 54, 56, 57, 53, 53, 57, 57, 55, 54, 56, 57, 53, 53, 54, 54,
    55, 55, 56, 57, 53, 53, 57, 57, 55, 54, 56, 57, 53, 53, 54, 54, 55, 55, 56, 57, 53, 53, 54, 54,
    55, 55, 56, 57, 53, 53, 54, 54, 55, 55, 56, 57, 255,
];

#[allow(dead_code)]
pub static TRACK_8: [u8; 43] = [
    73, 73, 73, 73, 73, 73, 73, 73, 75, 68, 69, 68, 69, 70, 71, 70, 72, 76, 77, 69, 76, 77, 69, 70,
    71, 70, 72, 76, 77, 69, 78, 78, 78, 78, 73, 73, 73, 73, 73, 73, 73, 73, 255,
];

#[allow(dead_code)]
pub static TRACK_9: [u8; 131] = [
    74, 74, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 66, 66, 66, 65, 65, 65, 65, 66, 66,
    66, 66, 67, 67, 67, 67, 65, 65, 65, 65, 67, 67, 67, 67, 66, 66, 66, 66, 65, 65, 65, 65, 66, 66,
    66, 66, 65, 65, 65, 65, 66, 66, 66, 66, 67, 67, 67, 67, 65, 65, 65, 65, 67, 67, 67, 67, 66, 66,
    66, 66, 65, 65, 65, 65, 66, 66, 66, 66, 65, 65, 65, 65, 67, 67, 66, 66, 65, 65, 65, 65, 67, 67,
    66, 66, 65, 65, 65, 65, 67, 67, 66, 66, 65, 65, 65, 65, 67, 67, 66, 66, 65, 65, 65, 65, 67, 67,
    66, 66, 65, 65, 65, 65, 67, 67, 66, 66, 255,
];

#[allow(dead_code)]
pub static TRACK_EMPTY: [u8; 1] = [255];

#[allow(dead_code)]
pub static TRACKS: [&[&[u8]; 3]; 5] = [
    &[&TRACK_0, &TRACK_1, &TRACK_EMPTY],
    &[&TRACK_2, &TRACK_3, &TRACK_EMPTY],
    &[&TRACK_4, &TRACK_5, &TRACK_EMPTY],
    &[&TRACK_6, &TRACK_7, &TRACK_EMPTY],
    &[&TRACK_8, &TRACK_9, &TRACK_EMPTY],
];

#[allow(dead_code)]
pub static PATTERNS: [&[u8]; 79] = [
    &PATTERN_0,
    &PATTERN_1,
    &PATTERN_2,
    &PATTERN_3,
    &PATTERN_4,
    &PATTERN_5,
    &PATTERN_6,
    &PATTERN_7,
    &PATTERN_8,
    &PATTERN_9,
    &PATTERN_10,
    &PATTERN_11,
    &PATTERN_12,
    &PATTERN_13,
    &PATTERN_14,
    &PATTERN_15,
    &PATTERN_16,
    &PATTERN_17,
    &PATTERN_18,
    &PATTERN_19,
    &PATTERN_20,
    &PATTERN_21,
    &PATTERN_22,
    &PATTERN_23,
    &PATTERN_24,
    &PATTERN_25,
    &PATTERN_26,
    &PATTERN_27,
    &PATTERN_28,
    &PATTERN_29,
    &PATTERN_30,
    &PATTERN_31,
    &PATTERN_32,
    &PATTERN_33,
    &PATTERN_34,
    &PATTERN_35,
    &PATTERN_36,
    &PATTERN_37,
    &PATTERN_38,
    &PATTERN_39,
    &PATTERN_40,
    &PATTERN_41,
    &PATTERN_42,
    &PATTERN_43,
    &PATTERN_44,
    &PATTERN_45,
    &PATTERN_46,
    &PATTERN_47,
    &PATTERN_48,
    &PATTERN_49,
    &PATTERN_50,
    &PATTERN_51,
    &PATTERN_52,
    &PATTERN_53,
    &PATTERN_54,
    &PATTERN_55,
    &PATTERN_56,
    &PATTERN_57,
    &PATTERN_58,
    &PATTERN_59,
    &PATTERN_60,
    &PATTERN_61,
    &PATTERN_62,
    &PATTERN_63,
    &PATTERN_64,
    &PATTERN_65,
    &PATTERN_66,
    &PATTERN_67,
    &PATTERN_68,
    &PATTERN_69,
    &PATTERN_70,
    &PATTERN_71,
    &PATTERN_72,
    &PATTERN_73,
    &PATTERN_74,
    &PATTERN_75,
    &PATTERN_76,
    &PATTERN_77,
    &PATTERN_78,
];
#[allow(dead_code)]
pub static PATTERN_0: [u8; 2] = [0x5F, 0xFF];
#[allow(dead_code)]
pub static PATTERN_1: [u8; 14] = [
    0x87, 0x0, 0x1F, 0x7, 0x26, 0x7, 0x2B, 0x7, 0x32, 0x3F, 0x1F, 0x1F, 0x1F, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_2: [u8; 60] = [
    0x43, 0x87, 0x1, 0x28, 0x7, 0x2D, 0x7, 0x34, 0x23, 0x39, 0x7, 0x3E, 0x81, 0x2, 0x51, 0x0, 0x4C,
    0x0, 0x4A, 0x0, 0x51, 0x0, 0x4F, 0x0, 0x4C, 0x0, 0x4A, 0x0, 0x51, 0x0, 0x4F, 0x0, 0x4C, 0x0,
    0x4A, 0x0, 0x51, 0x0, 0x4F, 0x0, 0x4C, 0x0, 0x4A, 0x0, 0x51, 0x0, 0x4F, 0x0, 0x4C, 0x0, 0x4A,
    0x0, 0x51, 0x0, 0x4F, 0x0, 0x4C, 0x0, 0x4A, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_3: [u8; 33] = [
    0x0, 0x51, 0x0, 0x4F, 0x0, 0x4C, 0x0, 0x4A, 0x0, 0x51, 0x0, 0x4F, 0x0, 0x4C, 0x0, 0x4A, 0x0,
    0x51, 0x0, 0x4F, 0x0, 0x4C, 0x0, 0x4A, 0x0, 0x51, 0x0, 0x4F, 0x0, 0x4C, 0x0, 0x4A, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_4: [u8; 14] = [
    0x87, 0x0, 0x1D, 0x7, 0x22, 0x7, 0x29, 0x7, 0x2E, 0x3F, 0x1D, 0x1F, 0x1D, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_5: [u8; 60] = [
    0x43, 0x87, 0x1, 0x24, 0x7, 0x2B, 0x7, 0x30, 0x23, 0x37, 0x7, 0x35, 0x81, 0x2, 0x54, 0x0, 0x4F,
    0x0, 0x4D, 0x0, 0x54, 0x0, 0x52, 0x0, 0x4F, 0x0, 0x4D, 0x0, 0x54, 0x0, 0x52, 0x0, 0x4F, 0x0,
    0x4D, 0x0, 0x54, 0x0, 0x52, 0x0, 0x4F, 0x0, 0x4D, 0x0, 0x54, 0x0, 0x52, 0x0, 0x4F, 0x0, 0x4D,
    0x0, 0x54, 0x0, 0x52, 0x0, 0x4F, 0x0, 0x4D, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_6: [u8; 33] = [
    0x0, 0x54, 0x0, 0x52, 0x0, 0x4F, 0x0, 0x4D, 0x0, 0x54, 0x0, 0x52, 0x0, 0x4F, 0x0, 0x4D, 0x0,
    0x54, 0x0, 0x52, 0x0, 0x4F, 0x0, 0x4D, 0x0, 0x54, 0x0, 0x52, 0x0, 0x4F, 0x0, 0x4D, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_7: [u8; 14] = [
    0x87, 0x0, 0x1B, 0x7, 0x26, 0x7, 0x29, 0x7, 0x32, 0x3F, 0x1B, 0x1F, 0x1B, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_8: [u8; 60] = [
    0x43, 0x87, 0x1, 0x27, 0x7, 0x2B, 0x7, 0x33, 0x23, 0x35, 0x7, 0x37, 0x81, 0x2, 0x4F, 0x0, 0x4B,
    0x0, 0x4A, 0x0, 0x4F, 0x0, 0x4D, 0x0, 0x4B, 0x0, 0x4A, 0x0, 0x4F, 0x0, 0x4D, 0x0, 0x4B, 0x0,
    0x4A, 0x0, 0x4F, 0x0, 0x4D, 0x0, 0x4B, 0x0, 0x4A, 0x0, 0x4F, 0x0, 0x4D, 0x0, 0x4B, 0x0, 0x4A,
    0x0, 0x4F, 0x0, 0x4D, 0x0, 0x4B, 0x0, 0x4A, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_9: [u8; 33] = [
    0x0, 0x4F, 0x0, 0x4D, 0x0, 0x4B, 0x0, 0x4A, 0x0, 0x4F, 0x0, 0x4D, 0x0, 0x4B, 0x0, 0x4A, 0x0,
    0x4F, 0x0, 0x4D, 0x0, 0x4B, 0x0, 0x4A, 0x0, 0x4F, 0x0, 0x4D, 0x0, 0x4B, 0x0, 0x4A, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_10: [u8; 14] = [
    0x87, 0x0, 0x1A, 0x7, 0x24, 0x7, 0x2A, 0x7, 0x30, 0x3F, 0x1A, 0x1F, 0x1A, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_11: [u8; 60] = [
    0x43, 0x87, 0x1, 0x26, 0x7, 0x2B, 0x7, 0x32, 0x23, 0x37, 0x7, 0x36, 0x81, 0x2, 0x54, 0x0, 0x52,
    0x0, 0x51, 0x0, 0x54, 0x0, 0x53, 0x0, 0x52, 0x0, 0x51, 0x0, 0x54, 0x0, 0x53, 0x0, 0x52, 0x0,
    0x51, 0x0, 0x54, 0x0, 0x53, 0x0, 0x52, 0x0, 0x51, 0x0, 0x54, 0x0, 0x53, 0x0, 0x52, 0x0, 0x51,
    0x0, 0x54, 0x0, 0x53, 0x0, 0x52, 0x0, 0x51, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_12: [u8; 33] = [
    0x0, 0x54, 0x0, 0x53, 0x0, 0x52, 0x0, 0x51, 0x0, 0x54, 0x0, 0x53, 0x0, 0x52, 0x0, 0x51, 0x0,
    0x54, 0x0, 0x53, 0x0, 0x52, 0x0, 0x51, 0x0, 0x54, 0x0, 0x53, 0x0, 0x52, 0x0, 0x51, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_13: [u8; 54] = [
    0x81, 0x3, 0x1F, 0x1, 0x1F, 0x3, 0x1F, 0x83, 0x4, 0x2E, 0x81, 0x3, 0x1F, 0x3, 0x22, 0x1, 0x22,
    0x3, 0x21, 0x83, 0x4, 0x2E, 0x81, 0x3, 0x1F, 0x1, 0x1D, 0x1, 0x1F, 0x1, 0x1F, 0x3, 0x1F, 0x83,
    0x4, 0x2E, 0x81, 0x3, 0x1D, 0x3, 0x1F, 0x1, 0x1F, 0x3, 0x1A, 0x83, 0x4, 0x2E, 0x81, 0x3, 0x1D,
    0x1, 0x21, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_14: [u8; 27] = [
    0x1, 0x1F, 0x1, 0x1F, 0x3, 0x1F, 0x83, 0x4, 0x2E, 0x81, 0x3, 0x1D, 0x3, 0x1F, 0x1, 0x1F, 0x3,
    0x1A, 0x83, 0x4, 0x2E, 0x81, 0x3, 0x1D, 0x1, 0x21, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_15: [u8; 54] = [
    0x81, 0x3, 0x1A, 0x1, 0x1A, 0x3, 0x1A, 0x83, 0x4, 0x2E, 0x81, 0x3, 0x1F, 0x3, 0x22, 0x1, 0x22,
    0x3, 0x21, 0x83, 0x4, 0x2E, 0x81, 0x3, 0x1D, 0x1, 0x1C, 0x1, 0x1A, 0x1, 0x1A, 0x3, 0x1A, 0x83,
    0x4, 0x2E, 0x81, 0x3, 0x1D, 0x3, 0x1F, 0x1, 0x1F, 0x3, 0x1A, 0x83, 0x4, 0x2E, 0x81, 0x3, 0x1D,
    0x1, 0x1E, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_16: [u8; 27] = [
    0x1, 0x1A, 0x1, 0x1A, 0x3, 0x1A, 0x83, 0x4, 0x2E, 0x81, 0x3, 0x1D, 0x3, 0x1F, 0x1, 0x1F, 0x3,
    0x1A, 0x83, 0x4, 0x2E, 0x81, 0x3, 0x1D, 0x1, 0x1E, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_17: [u8; 28] = [
    0x43, 0x87, 0x1, 0x26, 0x7, 0x2D, 0x7, 0x32, 0x23, 0x39, 0x7, 0x3E, 0x81, 0x2, 0x51, 0x0, 0x4C,
    0x0, 0x4A, 0x0, 0x51, 0x0, 0x4F, 0x0, 0x4C, 0x0, 0x4A, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_18: [u8; 117] = [
    0x43, 0x83, 0x1, 0x26, 0x3, 0x2D, 0x3, 0x2B, 0x3, 0x32, 0x3, 0x39, 0x3, 0x37, 0x3, 0x3E, 0x7,
    0x43, 0x87, 0x5, 0x52, 0x3, 0x51, 0x3, 0x4D, 0x3, 0x4A, 0x3, 0x51, 0x3, 0x4F, 0x83, 0x1, 0x24,
    0x3, 0x2B, 0x3, 0x29, 0x3, 0x30, 0x3, 0x37, 0x3, 0x35, 0x3, 0x3C, 0x7, 0x41, 0x87, 0x5, 0x4D,
    0x3, 0x4C, 0x3, 0x48, 0x3, 0x45, 0x3, 0x4C, 0x3, 0x4A, 0x83, 0x1, 0x2E, 0x3, 0x35, 0x3, 0x33,
    0x3, 0x3A, 0x3, 0x3E, 0x3, 0x41, 0x3, 0x3F, 0x7, 0x43, 0x87, 0x5, 0x4B, 0x3, 0x4A, 0x3, 0x46,
    0x3, 0x43, 0x3, 0x4A, 0x3, 0x48, 0x83, 0x1, 0x26, 0x3, 0x2D, 0x3, 0x32, 0x3, 0x30, 0x3, 0x32,
    0x3, 0x39, 0x3, 0x3C, 0x3, 0x3E, 0x3, 0x45, 0x3, 0x48, 0x3, 0x4A, 0xF, 0x4A, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_19: [u8; 10] = [0x81, 0x6, 0x2E, 0x1, 0x2E, 0x3, 0x2E, 0x3, 0x2C, 0xFF];
#[allow(dead_code)]
pub static PATTERN_20: [u8; 20] = [
    0x81, 0x7, 0x4A, 0x1, 0x4F, 0x1, 0x51, 0x1, 0x4A, 0x1, 0x4F, 0x1, 0x51, 0x1, 0x4A, 0x1, 0x4F,
    0x1, 0x51, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_21: [u8; 15] = [
    0x1, 0x52, 0x1, 0x51, 0x1, 0x4D, 0x1, 0x4A, 0x1, 0x4F, 0x1, 0x51, 0x3, 0x4F, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_22: [u8; 20] = [
    0x81, 0x7, 0x48, 0x1, 0x4D, 0x1, 0x4F, 0x1, 0x48, 0x1, 0x4D, 0x1, 0x4F, 0x1, 0x48, 0x1, 0x4D,
    0x1, 0x4F, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_23: [u8; 15] = [
    0x1, 0x4D, 0x1, 0x4C, 0x1, 0x48, 0x1, 0x45, 0x1, 0x4A, 0x1, 0x4C, 0x3, 0x4A, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_24: [u8; 20] = [
    0x81, 0x7, 0x46, 0x1, 0x4B, 0x1, 0x4D, 0x1, 0x46, 0x1, 0x4B, 0x1, 0x4D, 0x1, 0x46, 0x1, 0x4B,
    0x1, 0x4D, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_25: [u8; 15] = [
    0x1, 0x4B, 0x1, 0x4A, 0x1, 0x46, 0x1, 0x43, 0x1, 0x48, 0x1, 0x4A, 0x3, 0x48, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_26: [u8; 20] = [
    0x81, 0x7, 0x4A, 0x1, 0x4F, 0x1, 0x4E, 0x1, 0x4A, 0x1, 0x4F, 0x1, 0x4E, 0x1, 0x4A, 0x1, 0x4F,
    0x1, 0x4E, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_27: [u8; 17] = [
    0x1, 0x4E, 0x1, 0x4F, 0x1, 0x4E, 0x1, 0x4F, 0x1, 0x4E, 0x1, 0x4F, 0x1, 0x4E, 0x1, 0x4F, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_28: [u8; 22] = [
    0x87, 0x3, 0x1F, 0x83, 0x4, 0x31, 0x83, 0x3, 0x1A, 0x3, 0x1D, 0x3, 0x1F, 0x83, 0x4, 0x31, 0x81,
    0x3, 0x29, 0x1, 0x2B, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_29: [u8; 22] = [
    0x87, 0x3, 0x1D, 0x83, 0x4, 0x31, 0x83, 0x3, 0x1C, 0x3, 0x1B, 0x3, 0x1D, 0x83, 0x4, 0x31, 0x81,
    0x3, 0x27, 0x1, 0x29, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_30: [u8; 22] = [
    0x87, 0x3, 0x18, 0x83, 0x4, 0x31, 0x83, 0x3, 0x13, 0x3, 0x16, 0x3, 0x18, 0x83, 0x4, 0x31, 0x81,
    0x3, 0x22, 0x1, 0x24, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_31: [u8; 26] = [
    0x87, 0x4, 0x36, 0x87, 0x8, 0x3C, 0x7, 0x3B, 0x43, 0x3, 0x3C, 0x43, 0x3, 0x3C, 0x7, 0x3B, 0x3,
    0x39, 0x3, 0x37, 0x83, 0x6, 0x32, 0x3, 0x32, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_32: [u8; 26] = [
    0x87, 0x4, 0x36, 0x87, 0x8, 0x3A, 0x7, 0x39, 0x43, 0x3, 0x3A, 0x43, 0x3, 0x3A, 0x7, 0x39, 0x3,
    0x37, 0x3, 0x35, 0x83, 0x6, 0x32, 0x3, 0x32, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_33: [u8; 26] = [
    0x87, 0x4, 0x36, 0x87, 0x8, 0x35, 0x7, 0x34, 0x43, 0x3, 0x35, 0x43, 0x3, 0x35, 0x7, 0x34, 0x3,
    0x32, 0x3, 0x30, 0x83, 0x6, 0x32, 0x3, 0x32, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_34: [u8; 22] = [
    0x87, 0x3, 0x1A, 0x83, 0x4, 0x31, 0x83, 0x3, 0x15, 0x3, 0x18, 0x3, 0x1A, 0x83, 0x4, 0x31, 0x81,
    0x3, 0x24, 0x1, 0x26, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_35: [u8; 18] = [
    0x83, 0x9, 0x26, 0x3, 0x26, 0x3, 0x2D, 0x3, 0x26, 0x3, 0x30, 0x3, 0x26, 0x3, 0x2F, 0x3, 0x2D,
    0xFF,
];
#[allow(dead_code)]
pub static PATTERN_36: [u8; 18] = [
    0x83, 0x9, 0x2B, 0x3, 0x2B, 0x3, 0x32, 0x3, 0x2B, 0x3, 0x35, 0x3, 0x2B, 0x3, 0x34, 0x3, 0x32,
    0xFF,
];
#[allow(dead_code)]
pub static PATTERN_37: [u8; 53] = [
    0x83, 0x4, 0x32, 0x83, 0x9, 0x30, 0x3, 0x33, 0x3, 0x34, 0x3, 0x32, 0x3, 0x30, 0x3, 0x2E, 0x3,
    0x30, 0x83, 0x4, 0x32, 0x83, 0x9, 0x30, 0x3, 0x2E, 0x3, 0x30, 0x3, 0x33, 0x3, 0x34, 0x3, 0x30,
    0x3, 0x2E, 0x3, 0x2B, 0x3, 0x2B, 0x3, 0x29, 0x3, 0x2B, 0x3, 0x28, 0x3, 0x2B, 0x3, 0x29, 0x3,
    0x2B, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_38: [u8; 19] = [
    0x83, 0x4, 0x32, 0x83, 0x9, 0x2B, 0x3, 0x28, 0x3, 0x2B, 0x3, 0x2E, 0x3, 0x2F, 0x3, 0x2D, 0x3,
    0x2B, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_39: [u8; 50] = [
    0x87, 0x4, 0x36, 0x87, 0x8, 0x41, 0x3, 0x46, 0x7, 0x44, 0x7, 0x45, 0x3, 0x46, 0x3, 0x44, 0x3,
    0x45, 0x7, 0x41, 0x3, 0x3F, 0x3, 0x41, 0x87, 0x4, 0x36, 0x87, 0x8, 0x3C, 0x3, 0x41, 0x3, 0x3C,
    0x3, 0x3F, 0x3, 0x40, 0x7, 0x3C, 0x87, 0x6, 0x32, 0x3, 0x2F, 0x7, 0x2F, 0x3, 0x2C, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_40: [u8; 24] = [
    0x83, 0x3, 0x15, 0x83, 0xA, 0x58, 0x83, 0x4, 0x2F, 0x83, 0x3, 0x1C, 0x3, 0x15, 0x83, 0xA, 0x58,
    0x83, 0x4, 0x2F, 0x83, 0xA, 0x58, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_41: [u8; 24] = [
    0x83, 0x3, 0x1C, 0x83, 0xA, 0x58, 0x83, 0x4, 0x2F, 0x83, 0x3, 0x17, 0x3, 0x1C, 0x83, 0xA, 0x58,
    0x83, 0x4, 0x2F, 0x83, 0xA, 0x58, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_42: [u8; 75] = [
    0x83, 0xB, 0x39, 0x3, 0x39, 0x3, 0x37, 0xB, 0x39, 0x3, 0x37, 0x3, 0x39, 0x3, 0x3B, 0x3, 0x3B,
    0x3, 0x37, 0xF, 0x34, 0x3, 0x34, 0x3, 0x39, 0x7, 0x39, 0x7, 0x39, 0x3, 0x39, 0x3, 0x37, 0x3,
    0x39, 0x1F, 0x3B, 0x83, 0xB, 0x39, 0x3, 0x39, 0x3, 0x37, 0xB, 0x39, 0x3, 0x37, 0x3, 0x39, 0x3,
    0x3B, 0x3, 0x3B, 0x3, 0x37, 0xF, 0x34, 0x3, 0x34, 0x3, 0x3B, 0x7, 0x3C, 0x7, 0x3E, 0x3, 0x3C,
    0x3, 0x3B, 0x3, 0x3C, 0x1F, 0x39, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_43: [u8; 35] = [
    0x43, 0x83, 0xC, 0x45, 0x3, 0x43, 0x3, 0x41, 0x3, 0x40, 0x3, 0x3E, 0x3, 0x3D, 0x3, 0x3E, 0x5F,
    0x43, 0x83, 0xC, 0x45, 0x3, 0x43, 0x3, 0x41, 0x3, 0x40, 0x3, 0x3E, 0x3, 0x40, 0x3, 0x41, 0x5F,
    0xFF,
];
#[allow(dead_code)]
pub static PATTERN_44: [u8; 31] = [
    0x43, 0x83, 0xC, 0x3B, 0x3, 0x3F, 0x3, 0x40, 0x3, 0x42, 0x7, 0x43, 0x3, 0x42, 0x5F, 0x43, 0x83,
    0xC, 0x47, 0x3, 0x45, 0x3, 0x44, 0x3, 0x41, 0x7, 0x3E, 0x3, 0x40, 0x5F, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_45: [u8; 24] = [
    0x83, 0x3, 0x1A, 0x83, 0xA, 0x58, 0x83, 0x4, 0x2F, 0x83, 0x3, 0x15, 0x3, 0x1A, 0x83, 0xA, 0x58,
    0x83, 0x4, 0x2F, 0x83, 0xA, 0x58, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_46: [u8; 24] = [
    0x83, 0x3, 0x17, 0x83, 0xA, 0x58, 0x83, 0x4, 0x2F, 0x83, 0x3, 0x23, 0x3, 0x17, 0x83, 0xA, 0x58,
    0x83, 0x4, 0x2F, 0x83, 0xA, 0x58, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_47: [u8; 24] = [
    0x83, 0x3, 0x1D, 0x83, 0xA, 0x58, 0x83, 0x4, 0x2F, 0x83, 0x3, 0x18, 0x3, 0x1D, 0x83, 0xA, 0x58,
    0x83, 0x4, 0x2F, 0x83, 0xA, 0x58, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_48: [u8; 24] = [
    0x83, 0x3, 0x1F, 0x83, 0xA, 0x58, 0x83, 0x4, 0x2F, 0x83, 0x3, 0x1A, 0x3, 0x1F, 0x83, 0xA, 0x58,
    0x83, 0x4, 0x2F, 0x83, 0xA, 0x58, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_49: [u8; 24] = [
    0x83, 0x3, 0x18, 0x83, 0xA, 0x58, 0x83, 0x4, 0x2F, 0x83, 0x3, 0x1F, 0x3, 0x18, 0x83, 0xA, 0x58,
    0x83, 0x4, 0x2F, 0x83, 0xA, 0x58, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_50: [u8; 22] = [
    0x8B, 0xD, 0x45, 0x3, 0x48, 0x3, 0x4C, 0x3, 0x4A, 0x1, 0x48, 0x1, 0x4A, 0x1, 0x48, 0x1, 0x45,
    0xB, 0x47, 0x13, 0x4A, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_51: [u8; 20] = [
    0x8B, 0xD, 0x41, 0x3, 0x45, 0x3, 0x48, 0x3, 0x47, 0x1, 0x45, 0x1, 0x47, 0x1, 0x45, 0x1, 0x41,
    0x1F, 0x40, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_52: [u8; 20] = [
    0x8B, 0xD, 0x48, 0x3, 0x4D, 0x3, 0x51, 0x3, 0x4F, 0x1, 0x4D, 0x1, 0x4F, 0x1, 0x4D, 0x1, 0x4A,
    0x1F, 0x4C, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_53: [u8; 26] = [
    0x83, 0xE, 0x13, 0x3, 0x13, 0x83, 0x4, 0x30, 0x83, 0xE, 0x13, 0x1, 0x13, 0x1, 0x13, 0x3, 0x13,
    0x83, 0x4, 0x30, 0x81, 0xE, 0x13, 0x1, 0x13, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_54: [u8; 26] = [
    0x83, 0xE, 0x16, 0x3, 0x16, 0x83, 0x4, 0x30, 0x83, 0xE, 0x16, 0x1, 0x16, 0x1, 0x16, 0x3, 0x16,
    0x83, 0x4, 0x30, 0x81, 0xE, 0x16, 0x1, 0x16, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_55: [u8; 26] = [
    0x83, 0xE, 0x18, 0x3, 0x18, 0x83, 0x4, 0x30, 0x83, 0xE, 0x18, 0x1, 0x18, 0x1, 0x18, 0x3, 0x18,
    0x83, 0x4, 0x30, 0x81, 0xE, 0x18, 0x1, 0x18, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_56: [u8; 26] = [
    0x83, 0xE, 0xF, 0x3, 0xF, 0x83, 0x4, 0x30, 0x83, 0xE, 0xF, 0x1, 0xF, 0x1, 0xF, 0x3, 0xF, 0x83,
    0x4, 0x30, 0x81, 0xE, 0xF, 0x1, 0xF, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_57: [u8; 26] = [
    0x83, 0xE, 0x11, 0x3, 0x11, 0x83, 0x4, 0x30, 0x83, 0xE, 0x11, 0x1, 0x11, 0x1, 0x11, 0x3, 0x11,
    0x83, 0x4, 0x30, 0x81, 0xE, 0x11, 0x1, 0x11, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_58: [u8; 40] = [
    0x9F, 0xF, 0x2B, 0xF, 0x32, 0x27, 0x37, 0xA7, 0x91, 0x37, 0x3F, 0x35, 0x1F, 0x35, 0x1F, 0x30,
    0xF, 0x37, 0x27, 0x3C, 0xA7, 0x99, 0x3C, 0x1F, 0x3A, 0xA3, 0x90, 0x39, 0xA3, 0x91, 0x3A, 0x3,
    0x39, 0x7, 0x35, 0x3, 0x32, 0x7, 0x37, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_59: [u8; 91] = [
    0x87, 0x4, 0x2C, 0x83, 0xF, 0x32, 0x3, 0x35, 0xA3, 0x95, 0x3A, 0x3, 0x39, 0xA3, 0xA0, 0x35,
    0x3, 0x37, 0x17, 0x32, 0x83, 0x6, 0x2F, 0x1, 0x2C, 0x1, 0x2C, 0x87, 0x4, 0x2C, 0x83, 0xF, 0x30,
    0x3, 0x35, 0xA3, 0x95, 0x3A, 0x3, 0x39, 0x3, 0x37, 0x3, 0x35, 0x17, 0x39, 0x83, 0x6, 0x2F, 0x1,
    0x2C, 0x1, 0x2C, 0x87, 0x4, 0x2C, 0x83, 0xF, 0x30, 0x3, 0x33, 0x3, 0x37, 0x3, 0x35, 0x3, 0x33,
    0x3, 0x35, 0x27, 0x33, 0xA7, 0x8B, 0x33, 0x7, 0x32, 0x27, 0x33, 0xAF, 0x86, 0x33, 0xF, 0x35,
    0x27, 0x3A, 0xA7, 0x91, 0x3A, 0xF, 0x39, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_60: [u8; 130] = [
    0x83, 0x10, 0x3E, 0x3, 0x46, 0x3, 0x46, 0x3, 0x3E, 0x3, 0x48, 0x3, 0x48, 0x3, 0x45, 0x3, 0x46,
    0x3, 0x3E, 0x3, 0x46, 0x3, 0x46, 0x3, 0x3E, 0x3, 0x45, 0x3, 0x45, 0x3, 0x41, 0x3, 0x43, 0x3,
    0x3C, 0x3, 0x46, 0x3, 0x46, 0x3, 0x3C, 0x3, 0x48, 0x3, 0x48, 0x3, 0x45, 0x3, 0x46, 0x3, 0x3C,
    0x3, 0x46, 0x3, 0x46, 0x3, 0x3E, 0x3, 0x45, 0x3, 0x45, 0x3, 0x43, 0x3, 0x41, 0x3, 0x3C, 0x3,
    0x3F, 0x3, 0x3F, 0x3, 0x3C, 0x3, 0x43, 0x3, 0x43, 0x3, 0x3F, 0x3, 0x41, 0x3, 0x35, 0x3, 0x3F,
    0x3, 0x3F, 0x3, 0x35, 0x3, 0x3E, 0x3, 0x3E, 0x3, 0x3F, 0x3, 0x41, 0x3, 0x3A, 0x3, 0x41, 0x3,
    0x41, 0x3, 0x3A, 0x3, 0x43, 0x3, 0x43, 0x3, 0x41, 0x3, 0x43, 0x3, 0x3C, 0x3, 0x45, 0x3, 0x45,
    0x3, 0x3C, 0x3, 0x46, 0x3, 0x46, 0x3, 0x45, 0x3, 0x43, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_61: [u8; 46] = [
    0x8B, 0x10, 0x32, 0xB, 0x3A, 0x7, 0x3C, 0xB, 0x32, 0xB, 0x3A, 0x7, 0x39, 0xB, 0x30, 0xB, 0x3A,
    0x7, 0x3C, 0xB, 0x3A, 0xB, 0x39, 0x3, 0x37, 0x3, 0x35, 0x17, 0x33, 0x7, 0x35, 0xB, 0x33, 0xB,
    0x32, 0x7, 0x33, 0xB, 0x35, 0x13, 0x37, 0xB, 0x3A, 0x13, 0x39, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_62: [u8; 56] = [
    0x81, 0x11, 0x37, 0x1, 0x37, 0x3, 0x35, 0x3, 0x3A, 0x1, 0x37, 0x1, 0x35, 0x1, 0x37, 0x1, 0x37,
    0x1, 0x35, 0x3, 0x3A, 0x1, 0x3A, 0x1, 0x37, 0x3, 0x35, 0x1, 0x35, 0x1, 0x37, 0x1, 0x35, 0x3,
    0x3A, 0x1, 0x37, 0x1, 0x35, 0x1, 0x3A, 0x1, 0x3A, 0x1, 0x39, 0x1, 0x3A, 0x1, 0x39, 0x1, 0x37,
    0x1, 0x35, 0x1, 0x37, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_63: [u8; 56] = [
    0x81, 0x11, 0x3C, 0x1, 0x3C, 0x3, 0x3A, 0x3, 0x3F, 0x1, 0x3C, 0x1, 0x3A, 0x1, 0x3C, 0x1, 0x3C,
    0x1, 0x3A, 0x3, 0x3F, 0x1, 0x3F, 0x1, 0x3C, 0x3, 0x3C, 0x1, 0x3A, 0x1, 0x3C, 0x1, 0x3A, 0x3,
    0x3F, 0x1, 0x3C, 0x1, 0x3A, 0x1, 0x3F, 0x1, 0x3F, 0x1, 0x3E, 0x1, 0x3F, 0x1, 0x3E, 0x1, 0x3C,
    0x1, 0x3A, 0x1, 0x3C, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_64: [u8; 56] = [
    0x81, 0x11, 0x43, 0x1, 0x43, 0x3, 0x41, 0x3, 0x43, 0x1, 0x43, 0x1, 0x41, 0x1, 0x43, 0x1, 0x43,
    0x1, 0x41, 0x3, 0x43, 0x1, 0x43, 0x1, 0x41, 0x3, 0x43, 0x1, 0x43, 0x1, 0x43, 0x1, 0x41, 0x3,
    0x43, 0x1, 0x43, 0x1, 0x41, 0x1, 0x46, 0x1, 0x46, 0x1, 0x45, 0x1, 0x46, 0x1, 0x45, 0x1, 0x43,
    0x1, 0x41, 0x1, 0x43, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_65: [u8; 18] = [
    0x82, 0x13, 0x13, 0x82, 0x12, 0x1A, 0x2, 0x1F, 0x82, 0x4, 0x30, 0x82, 0x12, 0x1A, 0x82, 0x13,
    0x13, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_66: [u8; 18] = [
    0x82, 0x13, 0x1A, 0x82, 0x12, 0x1A, 0x2, 0x1F, 0x82, 0x4, 0x30, 0x82, 0x12, 0x1A, 0x82, 0x13,
    0x1A, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_67: [u8; 18] = [
    0x82, 0x13, 0x18, 0x82, 0x12, 0x1A, 0x2, 0x1F, 0x82, 0x4, 0x30, 0x82, 0x12, 0x1A, 0x82, 0x13,
    0x18, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_68: [u8; 42] = [
    0x85, 0x14, 0x37, 0x2, 0x37, 0x2, 0x35, 0x2, 0x36, 0x2, 0x37, 0x5, 0x3A, 0x2, 0x37, 0x2, 0x35,
    0x2, 0x36, 0x2, 0x37, 0x5, 0x32, 0x2, 0x37, 0x2, 0x35, 0x2, 0x36, 0x2, 0x37, 0x5, 0x3A, 0x2,
    0x37, 0x2, 0x35, 0x2, 0x36, 0x2, 0x37, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_69: [u8; 41] = [
    0x5, 0x32, 0x2, 0x32, 0x2, 0x30, 0x2, 0x31, 0x2, 0x32, 0x5, 0x35, 0x2, 0x32, 0x2, 0x30, 0x2,
    0x31, 0x2, 0x32, 0x5, 0x2D, 0x2, 0x32, 0x2, 0x30, 0x2, 0x31, 0x2, 0x32, 0x5, 0x35, 0x2, 0x32,
    0x2, 0x30, 0x2, 0x31, 0x2, 0x32, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_70: [u8; 47] = [
    0x5, 0x30, 0x2, 0x30, 0x2, 0x2E, 0x2, 0x2F, 0x2, 0x30, 0x2, 0x33, 0x2, 0x30, 0x2, 0x33, 0x2,
    0x30, 0x2, 0x35, 0x2, 0x30, 0x2, 0x35, 0x2, 0x30, 0x2, 0x35, 0x2, 0x30, 0x2, 0x33, 0x2, 0x30,
    0x2, 0x33, 0x2, 0x30, 0x2, 0x33, 0x2, 0x30, 0x2, 0x2E, 0x2, 0x2B, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_71: [u8; 47] = [
    0x5, 0x37, 0x2, 0x37, 0x2, 0x35, 0x2, 0x36, 0x2, 0x37, 0x2, 0x3A, 0x2, 0x37, 0x2, 0x3A, 0x2,
    0x37, 0x2, 0x3C, 0x2, 0x37, 0x2, 0x3C, 0x2, 0x37, 0x2, 0x3C, 0x2, 0x37, 0x2, 0x3A, 0x2, 0x37,
    0x2, 0x3A, 0x2, 0x3C, 0x2, 0x3A, 0x2, 0x37, 0x2, 0x35, 0x2, 0x32, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_72: [u8; 49] = [
    0x2, 0x32, 0x2, 0x30, 0x2, 0x31, 0x2, 0x32, 0x2, 0x34, 0x2, 0x32, 0x2, 0x35, 0x2, 0x32, 0x2,
    0x36, 0x2, 0x32, 0x2, 0x35, 0x2, 0x32, 0x2, 0x34, 0x2, 0x32, 0x2, 0x35, 0x2, 0x32, 0x2, 0x36,
    0x2, 0x32, 0x2, 0x35, 0x2, 0x32, 0x2, 0x34, 0x2, 0x32, 0x2, 0x35, 0x2, 0x36, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_73: [u8; 26] = [
    0x82, 0x8, 0x3E, 0x2, 0x37, 0x2, 0x41, 0x2, 0x37, 0x2, 0x3E, 0x2, 0x37, 0x2, 0x3E, 0x2, 0x37,
    0x2, 0x43, 0x2, 0x37, 0x2, 0x41, 0x2, 0x37, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_74: [u8; 14] = [
    0xB1, 0x13, 0x13, 0x51, 0x31, 0x11, 0x51, 0x31, 0x10, 0x51, 0x31, 0xF, 0x51, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_75: [u8; 17] = [
    0xB1, 0x15, 0x43, 0x31, 0x43, 0x31, 0x43, 0x31, 0x43, 0x31, 0x43, 0x31, 0x43, 0x31, 0x43, 0x51,
    0xFF,
];
#[allow(dead_code)]
pub static PATTERN_76: [u8; 4] = [0x85, 0x16, 0x37, 0xFF];
#[allow(dead_code)]
pub static PATTERN_77: [u8; 39] = [
    0x2, 0x37, 0x2, 0x35, 0x2, 0x36, 0x2, 0x37, 0x5, 0x3A, 0x2, 0x37, 0x2, 0x35, 0x2, 0x36, 0x2,
    0x37, 0x5, 0x32, 0x2, 0x37, 0x2, 0x35, 0x2, 0x36, 0x2, 0x37, 0x5, 0x3A, 0x2, 0x37, 0x2, 0x35,
    0x2, 0x36, 0x2, 0x37, 0xFF,
];
#[allow(dead_code)]
pub static PATTERN_78: [u8; 18] = [
    0xB1, 0x15, 0x2B, 0x31, 0x37, 0x31, 0x43, 0x31, 0x37, 0x31, 0x2B, 0x31, 0x37, 0x31, 0x43, 0x11,
    0x37, 0xFF,
];

#[allow(dead_code)]
pub static INSTRUMENTS: [Instrument; 23] = [
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x3C,
        sustain_and_release: 0x9F,
        vibrato_depth: 3,
        pulse_speed: 0x81,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x4C,
        sustain_and_release: 0x9F,
        vibrato_depth: 2,
        pulse_speed: 0x81,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 256,
        ctrl_register: 0b00010001,
        attack_and_decay: 0x0E,
        sustain_and_release: 0x00,
        vibrato_depth: 0,
        pulse_speed: 0x00,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 2304,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x0A,
        sustain_and_release: 0x09,
        vibrato_depth: 0,
        pulse_speed: 0xE1,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 512,
        ctrl_register: 0b10000001,
        attack_and_decay: 0x0A,
        sustain_and_release: 0x09,
        vibrato_depth: 0,
        pulse_speed: 0x00,
        fx: 0b00000101,
    },
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b00010001,
        attack_and_decay: 0x0A,
        sustain_and_release: 0x0F,
        vibrato_depth: 0,
        pulse_speed: 0x00,
        fx: 0b00000101,
    },
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x06,
        sustain_and_release: 0x09,
        vibrato_depth: 0,
        pulse_speed: 0x00,
        fx: 0b00000001,
    },
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x04,
        sustain_and_release: 0x0A,
        vibrato_depth: 2,
        pulse_speed: 0x00,
        fx: 0b00000101,
    },
    Instrument {
        pulse_width: 256,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x0A,
        sustain_and_release: 0x9A,
        vibrato_depth: 0,
        pulse_speed: 0x99,
        fx: 0b00001101,
    },
    Instrument {
        pulse_width: 0,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x0A,
        sustain_and_release: 0xFC,
        vibrato_depth: 0,
        pulse_speed: 0x0F,
        fx: 0b00001101,
    },
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b00010001,
        attack_and_decay: 0x0F,
        sustain_and_release: 0xFF,
        vibrato_depth: 1,
        pulse_speed: 0x00,
        fx: 0b00000101,
    },
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b00010001,
        attack_and_decay: 0x09,
        sustain_and_release: 0xFF,
        vibrato_depth: 2,
        pulse_speed: 0x00,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 256,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x09,
        sustain_and_release: 0x00,
        vibrato_depth: 0,
        pulse_speed: 0x79,
        fx: 0b00001100,
    },
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x00,
        sustain_and_release: 0x68,
        vibrato_depth: 0,
        pulse_speed: 0x00,
        fx: 0b00000100,
    },
    Instrument {
        pulse_width: 384,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x38,
        sustain_and_release: 0x89,
        vibrato_depth: 0,
        pulse_speed: 0x02,
        fx: 0b00001100,
    },
    Instrument {
        pulse_width: 384,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x37,
        sustain_and_release: 0x8F,
        vibrato_depth: 2,
        pulse_speed: 0x7F,
        fx: 0b00001000,
    },
    Instrument {
        pulse_width: 1024,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x08,
        sustain_and_release: 0x4F,
        vibrato_depth: 0,
        pulse_speed: 0x00,
        fx: 0b00000100,
    },
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x08,
        sustain_and_release: 0x09,
        vibrato_depth: 0,
        pulse_speed: 0xE1,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b00010001,
        attack_and_decay: 0x0F,
        sustain_and_release: 0x0F,
        vibrato_depth: 0,
        pulse_speed: 0x00,
        fx: 0b00000101,
    },
    Instrument {
        pulse_width: 2304,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x0F,
        sustain_and_release: 0x8D,
        vibrato_depth: 0,
        pulse_speed: 0x21,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 2304,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x42,
        sustain_and_release: 0x53,
        vibrato_depth: 2,
        pulse_speed: 0x41,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 256,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x0A,
        sustain_and_release: 0x9A,
        vibrato_depth: 1,
        pulse_speed: 0x99,
        fx: 0b00001010,
    },
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x43,
        sustain_and_release: 0x43,
        vibrato_depth: 0,
        pulse_speed: 0xE1,
        fx: 0b00000100,
    },
];

#[allow(dead_code)]
pub static SOUNDFX: [SoundFx; 0] = [];

#[allow(dead_code)]
pub static INSTRFX: [InstrFx; 0] = [];

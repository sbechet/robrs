// Sanxion Song 2 - Rob Hubbard - 1986 Thalamus

use crate::rhplayer::rhsongs::{InstrFx, Instrument, RhSongs, SidT, SoundFx};
#[allow(dead_code)]
pub static RHSONGS: RhSongs = RhSongs {
    version: 20,
    total: 1,
    channels: &CHANNELS,
    tracks: &TRACKS,
    instruments: &INSTRUMENTS,
    soundfx: &SOUNDFX,
    instrfx: &INSTRFX,
    resetspd: 2,
    skydive_v1_when: 0,
    skydive_v1_add: 0,
};

#[allow(dead_code)]
pub static CHANNEL_0: [u8; 32] = [
    0, 1, 10, 11, 32, 10, 12, 15, 16, 16, 19, 24, 27, 0, 1, 10, 11, 33, 36, 39, 36, 42, 36, 39, 36,
    50, 52, 32, 10, 53, 0, 254,
];

#[allow(dead_code)]
pub static CHANNEL_1: [u8; 59] = [
    4, 4, 4, 4, 5, 5, 7, 7, 9, 31, 4, 4, 5, 5, 14, 14, 18, 21, 22, 22, 25, 28, 4, 4, 4, 4, 5, 5, 7,
    7, 9, 34, 37, 40, 37, 43, 45, 46, 48, 49, 47, 4, 4, 4, 4, 5, 5, 7, 7, 9, 31, 4, 4, 5, 5, 14,
    54, 0, 254,
];

#[allow(dead_code)]
pub static CHANNEL_2: [u8; 59] = [
    2, 2, 2, 2, 3, 3, 6, 6, 8, 30, 2, 2, 3, 3, 13, 13, 17, 20, 20, 23, 23, 26, 29, 2, 2, 2, 2, 3,
    3, 6, 6, 8, 35, 38, 41, 38, 44, 38, 41, 38, 51, 2, 2, 2, 2, 3, 3, 6, 6, 8, 30, 2, 2, 3, 3, 13,
    55, 0, 254,
];

#[allow(dead_code)]
pub static CHANNELS: [&[&[u8]; 3]; 1] = [&[&CHANNEL_0, &CHANNEL_1, &CHANNEL_2]];

#[allow(dead_code)]
pub static TRACKS: [&[u8]; 56] = [
    &TRACK_0, &TRACK_1, &TRACK_2, &TRACK_3, &TRACK_4, &TRACK_5, &TRACK_6, &TRACK_7, &TRACK_8,
    &TRACK_9, &TRACK_10, &TRACK_11, &TRACK_12, &TRACK_13, &TRACK_14, &TRACK_15, &TRACK_16,
    &TRACK_17, &TRACK_18, &TRACK_19, &TRACK_20, &TRACK_21, &TRACK_22, &TRACK_23, &TRACK_24,
    &TRACK_25, &TRACK_26, &TRACK_27, &TRACK_28, &TRACK_29, &TRACK_30, &TRACK_31, &TRACK_32,
    &TRACK_33, &TRACK_34, &TRACK_35, &TRACK_36, &TRACK_37, &TRACK_38, &TRACK_39, &TRACK_40,
    &TRACK_41, &TRACK_42, &TRACK_43, &TRACK_44, &TRACK_45, &TRACK_46, &TRACK_47, &TRACK_48,
    &TRACK_49, &TRACK_50, &TRACK_51, &TRACK_52, &TRACK_53, &TRACK_54, &TRACK_55,
];
#[allow(dead_code)]
pub static TRACK_0: [u8; 3] = [0x5F, 0x5F, 0xFF];
#[allow(dead_code)]
pub static TRACK_1: [u8; 4] = [0x85, 0x0, 0x2F, 0xFF];
#[allow(dead_code)]
pub static TRACK_2: [u8; 13] = [
    0x87, 0x2, 0x10, 0x87, 0x3, 0x2B, 0x87, 0x2, 0x13, 0x87, 0x3, 0x2B, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_3: [u8; 13] = [
    0x87, 0x2, 0x1A, 0x87, 0x3, 0x2A, 0x87, 0x2, 0x17, 0x87, 0x3, 0x2A, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_4: [u8; 13] = [
    0x87, 0x4, 0x10, 0x87, 0x5, 0x2F, 0x87, 0x4, 0x13, 0x87, 0x5, 0x2F, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_5: [u8; 13] = [
    0x87, 0x4, 0x1A, 0x87, 0x5, 0x2F, 0x87, 0x4, 0x17, 0x87, 0x5, 0x2F, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_6: [u8; 13] = [
    0x87, 0x2, 0x12, 0x87, 0x3, 0x2D, 0x87, 0x2, 0x13, 0x87, 0x3, 0x2B, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_7: [u8; 13] = [
    0x87, 0x4, 0x12, 0x87, 0x5, 0x31, 0x87, 0x4, 0x13, 0x87, 0x5, 0x2E, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_8: [u8; 22] = [
    0x80, 0xA, 0x1A, 0x0, 0x25, 0x5, 0x26, 0x47, 0x0, 0x19, 0x0, 0x24, 0x5, 0x25, 0x47, 0x0, 0x17,
    0x0, 0x23, 0x5, 0x24, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_9: [u8; 11] = [
    0x87, 0x6, 0x2F, 0x47, 0x7, 0x2E, 0x47, 0x87, 0x7, 0x2D, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_10: [u8; 46] = [
    0x1, 0x34, 0x5, 0x37, 0x1, 0x3B, 0x5, 0x40, 0x1, 0x3B, 0x5, 0x37, 0x1, 0x34, 0x5, 0x2F, 0x1,
    0x34, 0x5, 0x37, 0x1, 0x3B, 0x3, 0x40, 0x43, 0xD, 0x3B, 0x1, 0x3E, 0x5, 0x42, 0x1, 0x47, 0x5,
    0x4A, 0x1, 0x47, 0x5, 0x42, 0x1, 0x3E, 0x5, 0x3B, 0x1, 0x3E, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_11: [u8; 45] = [
    0x5, 0x42, 0x1, 0x47, 0x15, 0x4A, 0x1, 0x4B, 0x5, 0x4A, 0x1, 0x49, 0x7, 0x3E, 0x7, 0x4A, 0x5,
    0x3E, 0x1, 0x3F, 0x1, 0x3E, 0x1, 0x3D, 0x1, 0x3D, 0x1, 0x3D, 0x7, 0x3D, 0xD, 0x32, 0x1, 0x33,
    0x5, 0x32, 0x7, 0x31, 0x1, 0x33, 0x5, 0x32, 0x7, 0x31, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_12: [u8; 31] = [
    0xF, 0x42, 0xD, 0x42, 0x1, 0x43, 0x1, 0x42, 0x1, 0x41, 0x1, 0x41, 0x1, 0x41, 0x7, 0x41, 0x7,
    0x36, 0x5, 0x35, 0x1, 0x37, 0x5, 0x36, 0x1, 0x46, 0x7, 0x41, 0x7, 0x36, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_13: [u8; 13] = [
    0x87, 0x2, 0x16, 0x87, 0x3, 0x31, 0x87, 0x2, 0x17, 0x87, 0x3, 0x2F, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_14: [u8; 13] = [
    0x87, 0x4, 0x16, 0x87, 0x5, 0x35, 0x87, 0x4, 0x17, 0x87, 0x5, 0x32, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_15: [u8; 34] = [
    0x85, 0x0, 0x35, 0x1, 0x39, 0x5, 0x3E, 0x1, 0x41, 0x5, 0x45, 0x1, 0x41, 0x5, 0x3E, 0x1, 0x41,
    0x5, 0x45, 0x1, 0x41, 0x5, 0x3E, 0x1, 0x41, 0x5, 0x45, 0x1, 0x41, 0x5, 0x3E, 0x1, 0x41, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_16: [u8; 17] = [
    0x5, 0x45, 0x1, 0x41, 0x5, 0x3E, 0x1, 0x41, 0x5, 0x45, 0x1, 0x41, 0x5, 0x3E, 0x1, 0x41, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_17: [u8; 61] = [
    0x87, 0xA, 0x1A, 0x57, 0x5F, 0x87, 0x9, 0x26, 0x7, 0x26, 0x7, 0x26, 0x3, 0x26, 0x3, 0x28, 0x3,
    0x29, 0x3, 0x2B, 0x3, 0x2D, 0x3, 0x2E, 0x7, 0x2D, 0x3, 0x2D, 0x3, 0x2E, 0x3, 0x30, 0x3, 0x32,
    0x3, 0x34, 0x3, 0x35, 0x3, 0x34, 0x3, 0x32, 0x3, 0x30, 0x3, 0x32, 0x3, 0x30, 0x3, 0x2E, 0x3,
    0x2D, 0x3, 0x2B, 0x3, 0x29, 0x3, 0x28, 0x7, 0x26, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_18: [u8; 86] = [
    0x87, 0x6, 0x2F, 0x57, 0x85, 0xA, 0x3E, 0x1, 0x39, 0x5, 0x35, 0x1, 0x39, 0x5, 0x35, 0x1, 0x32,
    0x5, 0x2D, 0x1, 0x29, 0x5, 0x3E, 0x1, 0x39, 0x5, 0x35, 0x1, 0x39, 0x5, 0x3E, 0x1, 0x39, 0x5,
    0x35, 0x1, 0x39, 0x5, 0x3E, 0x1, 0x39, 0x5, 0x35, 0x1, 0x39, 0x5, 0x3E, 0x1, 0x39, 0x5, 0x35,
    0x1, 0x39, 0x5, 0x3E, 0x1, 0x41, 0x5, 0x45, 0x1, 0x4A, 0x5, 0x4A, 0x1, 0x45, 0x5, 0x41, 0x1,
    0x3E, 0x5, 0x3E, 0x1, 0x39, 0x5, 0x35, 0x1, 0x39, 0x5, 0x3E, 0x1, 0x35, 0x5, 0x39, 0x1, 0x3E,
    0xFF,
];
#[allow(dead_code)]
pub static TRACK_19: [u8; 33] = [
    0x5, 0x45, 0x1, 0x4A, 0x5, 0x4D, 0x1, 0x51, 0x5, 0x51, 0x1, 0x4D, 0x5, 0x4A, 0x1, 0x45, 0x5,
    0x45, 0x1, 0x41, 0x5, 0x3E, 0x1, 0x41, 0x5, 0x45, 0x1, 0x39, 0x5, 0x3E, 0x1, 0x41, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_20: [u8; 13] = [
    0x87, 0xB, 0x18, 0x87, 0x7, 0x39, 0x87, 0xB, 0x15, 0x87, 0x7, 0x39, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_21: [u8; 17] = [
    0x87, 0xA, 0x40, 0x7, 0x45, 0x7, 0x4C, 0x7, 0x45, 0x7, 0x40, 0x7, 0x45, 0x3, 0x4C, 0x4B, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_22: [u8; 13] = [
    0x87, 0x4, 0x14, 0x87, 0x5, 0x33, 0x87, 0x4, 0x15, 0x87, 0x5, 0x30, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_23: [u8; 13] = [
    0x87, 0xB, 0x14, 0x87, 0x3, 0x2F, 0x87, 0xB, 0x15, 0x87, 0x3, 0x2D, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_24: [u8; 89] = [
    0x85, 0x0, 0x45, 0x1, 0x48, 0x5, 0x4C, 0x1, 0x51, 0x5, 0x54, 0x1, 0x51, 0x5, 0x4C, 0x1, 0x48,
    0x5, 0x45, 0x1, 0x48, 0x5, 0x4C, 0x1, 0x51, 0x3, 0x54, 0x43, 0xD, 0x40, 0x1, 0x41, 0x5, 0x40,
    0x1, 0x3F, 0x7, 0x34, 0x7, 0x41, 0x5, 0x40, 0x1, 0x41, 0x1, 0x40, 0x1, 0x3F, 0x1, 0x3F, 0x1,
    0x3F, 0x7, 0x3F, 0x7, 0x34, 0x5, 0x2F, 0x1, 0x34, 0x5, 0x37, 0x1, 0x3B, 0x5, 0x40, 0x1, 0x45,
    0x5, 0x43, 0x1, 0x40, 0x5, 0x40, 0x1, 0x45, 0x5, 0x43, 0x1, 0x40, 0x5, 0x40, 0x1, 0x3B, 0x5,
    0x38, 0x1, 0x34, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_25: [u8; 24] = [
    0x87, 0x9, 0x28, 0x4D, 0x81, 0xA, 0x3C, 0x5, 0x3B, 0x1, 0x38, 0x5, 0x37, 0x1, 0x30, 0x5, 0x2F,
    0x1, 0x2B, 0x7, 0x2C, 0x7, 0x28, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_26: [u8; 6] = [0x87, 0x9, 0x13, 0x57, 0x5F, 0xFF];
#[allow(dead_code)]
pub static TRACK_27: [u8; 109] = [
    0x5, 0x35, 0x1, 0x38, 0x5, 0x3C, 0x1, 0x41, 0x5, 0x44, 0x1, 0x41, 0x5, 0x3C, 0x1, 0x38, 0x5,
    0x35, 0x1, 0x38, 0x5, 0x3C, 0x1, 0x41, 0x5, 0x44, 0x1, 0x41, 0x5, 0x3C, 0x1, 0x38, 0x5, 0x3C,
    0x1, 0x41, 0x5, 0x44, 0x1, 0x48, 0x5, 0x4D, 0x1, 0x48, 0x5, 0x44, 0x1, 0x3C, 0x5, 0x44, 0x1,
    0x48, 0x5, 0x4D, 0x1, 0x50, 0x3, 0x53, 0x42, 0x0, 0x50, 0x7, 0x3C, 0x8F, 0x0, 0x3C, 0xF, 0x3A,
    0xF, 0x38, 0x7, 0x37, 0x3, 0x37, 0x3, 0x38, 0x3, 0x3A, 0x3, 0x3C, 0x3, 0x3E, 0x3, 0x3F, 0x3,
    0x41, 0x3, 0x43, 0x3, 0x44, 0x3, 0x46, 0x3, 0x47, 0x3, 0x43, 0x3, 0x40, 0x3, 0x3C, 0x3, 0x39,
    0x3, 0x36, 0x3, 0x33, 0x3, 0x2F, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_28: [u8; 98] = [
    0x7, 0x30, 0x7, 0x38, 0x7, 0x3C, 0x7, 0x38, 0x7, 0x30, 0x7, 0x38, 0x7, 0x3C, 0x7, 0x38, 0x7,
    0x38, 0x7, 0x41, 0x7, 0x44, 0x7, 0x41, 0x7, 0x41, 0x7, 0x48, 0x3, 0x47, 0x42, 0x0, 0x4, 0x7,
    0x38, 0x3, 0x1B, 0x3, 0x1F, 0x3, 0x24, 0x3, 0x1F, 0x3, 0x1A, 0x3, 0x1D, 0x3, 0x23, 0x3, 0x1D,
    0x3, 0x18, 0x3, 0x1B, 0x3, 0x20, 0x3, 0x1B, 0x3, 0x16, 0x3, 0x1A, 0x3, 0x1F, 0x3, 0x1A, 0x3,
    0x14, 0x3, 0x18, 0x3, 0x1D, 0x3, 0x18, 0x3, 0x13, 0x3, 0x16, 0x3, 0x1B, 0x3, 0x16, 0x7, 0x17,
    0x3, 0x37, 0x3, 0x34, 0x3, 0x30, 0x3, 0x2D, 0x3, 0x2A, 0x3, 0x27, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_29: [u8; 106] = [
    0x87, 0xB, 0x11, 0x7, 0x11, 0x7, 0x11, 0x3, 0x11, 0x3, 0x13, 0x3, 0x14, 0x3, 0x16, 0x3, 0x18,
    0x3, 0x19, 0x7, 0x18, 0x3, 0x18, 0x3, 0x19, 0x3, 0x1B, 0x3, 0x1D, 0x3, 0x1F, 0x3, 0x20, 0x3,
    0x1F, 0x3, 0x1D, 0x3, 0x1B, 0x3, 0x1D, 0x3, 0x1B, 0x3, 0x19, 0x3, 0x18, 0x3, 0x16, 0x3, 0x14,
    0x3, 0x13, 0x7, 0x11, 0x87, 0x9, 0x30, 0x7, 0x30, 0x7, 0x30, 0x3, 0x30, 0x3, 0x32, 0x3, 0x33,
    0x3, 0x35, 0x3, 0x37, 0x3, 0x38, 0x7, 0x37, 0x3, 0x37, 0x3, 0x38, 0x87, 0x1, 0x43, 0x7, 0x43,
    0x7, 0x43, 0x7, 0x4F, 0x3, 0x4F, 0x3, 0x4F, 0x3, 0x4C, 0x3, 0x48, 0x3, 0x45, 0x3, 0x42, 0x3,
    0x3F, 0x3, 0x3B, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_30: [u8; 9] = [0x47, 0x0, 0x16, 0x0, 0x22, 0x5, 0x23, 0x47, 0xFF];
#[allow(dead_code)]
pub static TRACK_31: [u8; 6] = [0x47, 0x87, 0x8, 0x2E, 0x47, 0xFF];
#[allow(dead_code)]
pub static TRACK_32: [u8; 7] = [0x1, 0x37, 0xF, 0x36, 0xD, 0x2F, 0xFF];
#[allow(dead_code)]
pub static TRACK_33: [u8; 8] = [0x41, 0x87, 0xA, 0x40, 0x7, 0x40, 0x47, 0xFF];
#[allow(dead_code)]
pub static TRACK_34: [u8; 7] = [0x87, 0x7, 0x3C, 0x7, 0x40, 0x47, 0xFF];
#[allow(dead_code)]
pub static TRACK_35: [u8; 7] = [0x87, 0xB, 0x17, 0x7, 0x1C, 0x47, 0xFF];
#[allow(dead_code)]
pub static TRACK_36: [u8; 34] = [
    0x9B, 0xC, 0x3B, 0x1, 0xC0, 0x1, 0xC3, 0x7, 0xC7, 0x7, 0x3B, 0x1B, 0xBB, 0x1, 0xBE, 0x1, 0xC2,
    0x7, 0xC7, 0x7, 0x3B, 0x7, 0xBB, 0x7, 0xBC, 0x7, 0xBE, 0x7, 0xBF, 0x7, 0xBD, 0x7, 0xBB, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_37: [u8; 39] = [
    0x87, 0xD, 0x37, 0x7, 0x37, 0x7, 0x36, 0x7, 0x37, 0x7, 0x34, 0x7, 0x36, 0x7, 0x36, 0x7, 0x36,
    0x7, 0x34, 0x7, 0x36, 0x7, 0x32, 0x7, 0x34, 0x87, 0xC, 0x30, 0x7, 0xB9, 0x7, 0xBA, 0x7, 0xBB,
    0x7, 0xBA, 0x7, 0xB8, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_38: [u8; 38] = [
    0x87, 0xE, 0x1C, 0x7, 0x23, 0x7, 0x17, 0x7, 0x1C, 0x7, 0x23, 0x7, 0x17, 0x7, 0x1A, 0x7, 0x23,
    0x7, 0x1E, 0x7, 0x1A, 0x7, 0x23, 0x7, 0x1E, 0x7, 0x21, 0x7, 0x28, 0x7, 0x1C, 0x7, 0x20, 0x7,
    0x27, 0x7, 0x1B, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_39: [u8; 11] = [0x7, 0xBD, 0x7, 0xBB, 0x7, 0xB8, 0x10, 0xBA, 0x7, 0xBB, 0xFF];
#[allow(dead_code)]
pub static TRACK_40: [u8; 13] = [
    0x7, 0xBA, 0x7, 0xB8, 0x7, 0xB3, 0x7, 0xB2, 0x8, 0xB5, 0x7, 0xB2, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_41: [u8; 13] = [
    0x7, 0x1D, 0x7, 0x20, 0x7, 0x23, 0x7, 0x22, 0x8, 0x1A, 0x7, 0x17, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_42: [u8; 11] = [0x7, 0xC0, 0x7, 0xBE, 0x8, 0xBF, 0x11, 0xC0, 0x7, 0xBB, 0xFF];
#[allow(dead_code)]
pub static TRACK_43: [u8; 10] = [0x7, 0xBC, 0x7, 0xBA, 0x8, 0xB9, 0x11, 0xB7, 0x47, 0xFF];
#[allow(dead_code)]
pub static TRACK_44: [u8; 11] = [0x7, 0x1E, 0x7, 0x1A, 0x8, 0x17, 0x11, 0x1C, 0x7, 0x23, 0xFF];
#[allow(dead_code)]
pub static TRACK_45: [u8; 74] = [
    0x83, 0xF, 0x3B, 0x3, 0x3A, 0x3, 0x3B, 0x3, 0x40, 0x3, 0x42, 0x3, 0x47, 0x3, 0x4C, 0x3, 0x4A,
    0x3, 0x47, 0x3, 0x43, 0x3, 0x3E, 0x3, 0x42, 0x3, 0x3B, 0x3, 0x3A, 0x3, 0x3B, 0x3, 0x3E, 0x3,
    0x40, 0x3, 0x47, 0x3, 0x4C, 0x3, 0x4A, 0x3, 0x47, 0x3, 0x42, 0x3, 0x40, 0x3, 0x3B, 0x3, 0x3B,
    0x3, 0x40, 0x3, 0x47, 0x3, 0x4C, 0x3, 0x4A, 0x3, 0x4C, 0x3, 0x47, 0x3, 0x4B, 0x3, 0x46, 0x3,
    0x3F, 0x3, 0x3B, 0x3, 0x3F, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_46: [u8; 22] = [
    0x3, 0x3D, 0x3, 0x3F, 0x3, 0x3B, 0x3, 0x44, 0x3, 0x3F, 0x3, 0x4B, 0x3, 0x3A, 0x3, 0x3E, 0x3,
    0x35, 0x3, 0x3A, 0x48, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_47: [u8; 8] = [0x88, 0xC, 0x3C, 0x9, 0xBA, 0xB, 0xB9, 0xFF];
#[allow(dead_code)]
pub static TRACK_48: [u8; 4] = [0x83, 0x10, 0x3B, 0xFF];
#[allow(dead_code)]
pub static TRACK_49: [u8; 71] = [
    0x3, 0x3A, 0x3, 0x3B, 0x3, 0x40, 0x3, 0x42, 0x3, 0x47, 0x3, 0x4C, 0x3, 0x4A, 0x3, 0x47, 0x3,
    0x43, 0x3, 0x3E, 0x3, 0x42, 0x3, 0x3B, 0x3, 0x3A, 0x3, 0x3B, 0x3, 0x3E, 0x3, 0x40, 0x3, 0x47,
    0x3, 0x4C, 0x3, 0x4A, 0x3, 0x47, 0x3, 0x42, 0x3, 0x40, 0x3, 0x3B, 0x3, 0x3B, 0x3, 0x40, 0x3,
    0x47, 0x3, 0x4C, 0x3, 0x4A, 0x3, 0x4C, 0x3, 0x47, 0x3, 0x4B, 0x3, 0x46, 0x3, 0x3F, 0x3, 0x3B,
    0x3, 0x3F, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_50: [u8; 83] = [
    0x8, 0x40, 0x9, 0x3E, 0xB, 0x3F, 0xF, 0x40, 0x45, 0x5F, 0x81, 0x11, 0x23, 0x5, 0x23, 0x1, 0x23,
    0x5, 0x23, 0x1, 0x28, 0x5, 0x2B, 0x1, 0x2F, 0x5, 0x34, 0x1, 0x2F, 0x5, 0x2B, 0x1, 0x28, 0x5,
    0x23, 0x1, 0x28, 0x5, 0x2B, 0x1, 0x2F, 0x3, 0x34, 0x43, 0x8D, 0x12, 0x2F, 0x1, 0x32, 0x5, 0x36,
    0x1, 0x3B, 0x5, 0x3E, 0x1, 0x3B, 0x5, 0x36, 0x1, 0x32, 0x5, 0x2F, 0x1, 0x32, 0x5, 0x36, 0x1,
    0x3B, 0x15, 0x3E, 0x81, 0x0, 0x3F, 0x5, 0x3E, 0x1, 0x3D, 0x7, 0x32, 0xD, 0x3E, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_51: [u8; 7] = [0x8, 0x1E, 0x9, 0x1A, 0xB, 0x17, 0xFF];
#[allow(dead_code)]
pub static TRACK_52: [u8; 27] = [
    0x1, 0x3F, 0x1, 0x3E, 0x1, 0x3D, 0x1, 0x3D, 0x1, 0x3D, 0x7, 0x3D, 0xD, 0x32, 0x1, 0x33, 0x5,
    0x32, 0x7, 0x31, 0x1, 0x33, 0x5, 0x32, 0x7, 0x31, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_53: [u8; 58] = [
    0xF, 0x42, 0xD, 0x42, 0x1, 0x43, 0x5, 0x42, 0x1, 0x41, 0x5, 0x3D, 0x1, 0x3B, 0x5, 0x36, 0x1,
    0x43, 0x5, 0x42, 0x1, 0x41, 0x5, 0x3D, 0x1, 0x3B, 0x7, 0x36, 0x7, 0x36, 0x5, 0x36, 0x1, 0x3A,
    0x5, 0x3F, 0x1, 0x42, 0x5, 0x46, 0x1, 0x4B, 0x5, 0x4E, 0x1, 0x52, 0x4, 0x46, 0x44, 0x3, 0x40,
    0x3, 0x40, 0x43, 0x9, 0x40, 0x47, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_54: [u8; 36] = [
    0x87, 0x4, 0x16, 0x87, 0x5, 0x35, 0x87, 0xA, 0x2F, 0x7, 0x2E, 0x87, 0x4, 0x18, 0x87, 0x5, 0x33,
    0x87, 0x4, 0x17, 0x87, 0x5, 0x33, 0x84, 0x7, 0x39, 0x44, 0x3, 0x3C, 0x3, 0x3C, 0x43, 0x9, 0x40,
    0x47, 0xFF,
];
#[allow(dead_code)]
pub static TRACK_55: [u8; 36] = [
    0x87, 0x2, 0x16, 0x87, 0x3, 0x31, 0x87, 0xB, 0x1A, 0x7, 0x19, 0x87, 0x2, 0x18, 0x87, 0x3, 0x2D,
    0x87, 0x2, 0x17, 0x87, 0x3, 0x2E, 0x84, 0xB, 0x30, 0x44, 0x3, 0x17, 0x43, 0x3, 0x17, 0x9, 0x1C,
    0x47, 0xFF,
];

#[allow(dead_code)]
pub static INSTRUMENTS: [Instrument; 20] = [
    Instrument {
        pulse_width: 2624,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x69,
        sustain_and_release: 0x73,
        vibrato_depth: 35,
        pulse_speed: 0x60,
        fx: 0b00000100,
    },
    Instrument {
        pulse_width: 3136,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x59,
        sustain_and_release: 0x60,
        vibrato_depth: 27,
        pulse_speed: 0x50,
        fx: 0b00100100,
    },
    Instrument {
        pulse_width: 3776,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x3F,
        sustain_and_release: 0xFF,
        vibrato_depth: 0,
        pulse_speed: 0x0C,
        fx: 0b00100100,
    },
    Instrument {
        pulse_width: 0,
        ctrl_register: 0b01000001,
        attack_and_decay: 0xA0,
        sustain_and_release: 0x69,
        vibrato_depth: 0,
        pulse_speed: 0x30,
        fx: 0b00000100,
    },
    Instrument {
        pulse_width: 0,
        ctrl_register: 0b00100001,
        attack_and_decay: 0x99,
        sustain_and_release: 0xC9,
        vibrato_depth: 0,
        pulse_speed: 0x00,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 0,
        ctrl_register: 0b01000001,
        attack_and_decay: 0xA0,
        sustain_and_release: 0x59,
        vibrato_depth: 0,
        pulse_speed: 0x48,
        fx: 0b00100100,
    },
    Instrument {
        pulse_width: 256,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x69,
        sustain_and_release: 0x60,
        vibrato_depth: 0,
        pulse_speed: 0x18,
        fx: 0b00110100,
    },
    Instrument {
        pulse_width: 256,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x69,
        sustain_and_release: 0x60,
        vibrato_depth: 0,
        pulse_speed: 0x18,
        fx: 0b00010100,
    },
    Instrument {
        pulse_width: 256,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x69,
        sustain_and_release: 0x60,
        vibrato_depth: 0,
        pulse_speed: 0x18,
        fx: 0b00010100,
    },
    Instrument {
        pulse_width: 3072,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x00,
        sustain_and_release: 0xF8,
        vibrato_depth: 0,
        pulse_speed: 0x60,
        fx: 0b00100000,
    },
    Instrument {
        pulse_width: 2624,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x89,
        sustain_and_release: 0x65,
        vibrato_depth: 35,
        pulse_speed: 0x60,
        fx: 0b00000100,
    },
    Instrument {
        pulse_width: 3648,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x00,
        sustain_and_release: 0xF9,
        vibrato_depth: 0,
        pulse_speed: 0x20,
        fx: 0b00100000,
    },
    Instrument {
        pulse_width: 768,
        ctrl_register: 0b00010001,
        attack_and_decay: 0x86,
        sustain_and_release: 0xF0,
        vibrato_depth: 35,
        pulse_speed: 0x00,
        fx: 0b00000100,
    },
    Instrument {
        pulse_width: 2080,
        ctrl_register: 0b00010001,
        attack_and_decay: 0x09,
        sustain_and_release: 0x10,
        vibrato_depth: 0,
        pulse_speed: 0x00,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 192,
        ctrl_register: 0b01010001,
        attack_and_decay: 0x48,
        sustain_and_release: 0x30,
        vibrato_depth: 0,
        pulse_speed: 0x28,
        fx: 0b00000100,
    },
    Instrument {
        pulse_width: 2048,
        ctrl_register: 0b00100001,
        attack_and_decay: 0x00,
        sustain_and_release: 0x5B,
        vibrato_depth: 27,
        pulse_speed: 0x00,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 128,
        ctrl_register: 0b00010000,
        attack_and_decay: 0x02,
        sustain_and_release: 0x4A,
        vibrato_depth: 0,
        pulse_speed: 0x00,
        fx: 0b00010100,
    },
    Instrument {
        pulse_width: 3776,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x48,
        sustain_and_release: 0x69,
        vibrato_depth: 19,
        pulse_speed: 0x08,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 2176,
        ctrl_register: 0b01000001,
        attack_and_decay: 0x38,
        sustain_and_release: 0x49,
        vibrato_depth: 27,
        pulse_speed: 0x03,
        fx: 0b00000000,
    },
    Instrument {
        pulse_width: 0,
        ctrl_register: 0b00000000,
        attack_and_decay: 0x00,
        sustain_and_release: 0x00,
        vibrato_depth: 0,
        pulse_speed: 0x00,
        fx: 0b00000000,
    },
];

#[allow(dead_code)]
pub static SOUNDFX: [SoundFx; 0] = [];

#[allow(dead_code)]
pub static INSTRFX: [InstrFx; 20] = [
    InstrFx {
        vibdepth_note: 107,
        arpt: 0b10001011,
        skydive: 0b11000110,
        arpt_counter: 198,
        notenum: 198,
        pw_minmax: 0xc6,
        resfilt: 0b00000001,
        fchi: 0b00000100,
    },
    InstrFx {
        vibdepth_note: 137,
        arpt: 0b10100011,
        skydive: 0b10110000,
        arpt_counter: 206,
        notenum: 219,
        pw_minmax: 0x02,
        resfilt: 0b00101001,
        fchi: 0b01001000,
    },
    InstrFx {
        vibdepth_note: 8,
        arpt: 0b00110110,
        skydive: 0b01101010,
        arpt_counter: 245,
        notenum: 28,
        pw_minmax: 0x59,
        resfilt: 0b01101010,
        fchi: 0b01111011,
    },
    InstrFx {
        vibdepth_note: 184,
        arpt: 0b00001110,
        skydive: 0b10010110,
        arpt_counter: 189,
        notenum: 15,
        pw_minmax: 0xe8,
        resfilt: 0b00101111,
        fchi: 0b10001000,
    },
    InstrFx {
        vibdepth_note: 160,
        arpt: 0b10100110,
        skydive: 0b00010011,
        arpt_counter: 162,
        notenum: 63,
        pw_minmax: 0x53,
        resfilt: 0b01100011,
        fchi: 0b00001100,
    },
    InstrFx {
        vibdepth_note: 20,
        arpt: 0b00011011,
        skydive: 0b00100010,
        arpt_counter: 90,
        notenum: 152,
        pw_minmax: 0x44,
        resfilt: 0b10000001,
        fchi: 0b10111110,
    },
    InstrFx {
        vibdepth_note: 79,
        arpt: 0b10001110,
        skydive: 0b11001011,
        arpt_counter: 218,
        notenum: 36,
        pw_minmax: 0x3a,
        resfilt: 0b11010110,
        fchi: 0b11011101,
    },
    InstrFx {
        vibdepth_note: 73,
        arpt: 0b01000010,
        skydive: 0b01001000,
        arpt_counter: 156,
        notenum: 214,
        pw_minmax: 0xfa,
        resfilt: 0b11000111,
        fchi: 0b11000111,
    },
    InstrFx {
        vibdepth_note: 199,
        arpt: 0b11000111,
        skydive: 0b11000111,
        arpt_counter: 199,
        notenum: 199,
        pw_minmax: 0xc8,
        resfilt: 0b11001000,
        fchi: 0b11001000,
    },
    InstrFx {
        vibdepth_note: 199,
        arpt: 0b11000111,
        skydive: 0b11000111,
        arpt_counter: 199,
        notenum: 200,
        pw_minmax: 0xc8,
        resfilt: 0b11001000,
        fchi: 0b11001000,
    },
    InstrFx {
        vibdepth_note: 200,
        arpt: 0b11001001,
        skydive: 0b11000111,
        arpt_counter: 199,
        notenum: 200,
        pw_minmax: 0xc7,
        resfilt: 0b11001001,
        fchi: 0b11001001,
    },
    InstrFx {
        vibdepth_note: 201,
        arpt: 0b11001001,
        skydive: 0b11001010,
        arpt_counter: 202,
        notenum: 200,
        pw_minmax: 0xc8,
        resfilt: 0b11000111,
        fchi: 0b11001011,
    },
    InstrFx {
        vibdepth_note: 203,
        arpt: 0b11001011,
        skydive: 0b11001011,
        arpt_counter: 203,
        notenum: 203,
        pw_minmax: 0xcb,
        resfilt: 0b11001011,
        fchi: 0b11001011,
    },
    InstrFx {
        vibdepth_note: 203,
        arpt: 0b11001011,
        skydive: 0b11001011,
        arpt_counter: 203,
        notenum: 204,
        pw_minmax: 0xcc,
        resfilt: 0b11001011,
        fchi: 0b11001011,
    },
    InstrFx {
        vibdepth_note: 204,
        arpt: 0b11001100,
        skydive: 0b11000111,
        arpt_counter: 204,
        notenum: 204,
        pw_minmax: 0xcc,
        resfilt: 0b00000000,
        fchi: 0b00000001,
    },
    InstrFx {
        vibdepth_note: 10,
        arpt: 0b00001011,
        skydive: 0b00100000,
        arpt_counter: 10,
        notenum: 12,
        pw_minmax: 0x0f,
        resfilt: 0b00010000,
        fchi: 0b00010000,
    },
    InstrFx {
        vibdepth_note: 19,
        arpt: 0b00011000,
        skydive: 0b00011011,
        arpt_counter: 0,
        notenum: 1,
        pw_minmax: 0x0a,
        resfilt: 0b00001011,
        fchi: 0b00100001,
    },
    InstrFx {
        vibdepth_note: 36,
        arpt: 0b00100111,
        skydive: 0b00100100,
        arpt_counter: 42,
        notenum: 36,
        pw_minmax: 0x27,
        resfilt: 0b00100100,
        fchi: 0b00110010,
    },
    InstrFx {
        vibdepth_note: 52,
        arpt: 0b00100000,
        skydive: 0b00001010,
        arpt_counter: 53,
        notenum: 0,
        pw_minmax: 0xfe,
        resfilt: 0b00000100,
        fchi: 0b00000100,
    },
    InstrFx {
        vibdepth_note: 4,
        arpt: 0b00000100,
        skydive: 0b00000101,
        arpt_counter: 5,
        notenum: 7,
        pw_minmax: 0x07,
        resfilt: 0b00001001,
        fchi: 0b00011111,
    },
];
